[
    {
        "identifier": "scene_1_27_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash clothes\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| basket_for_clothes.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'GRABBABLE', 'MOVABLE'] |\n| washing_machine.1001 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'RECIPIENT'] |\n| soap.1002 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| clothes_jacket.1003 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(washing_machine.1001)\nCLOSED(washing_machine.1001)\nOFF(washing_machine.1001)\nPLUGGED_IN(washing_machine.1001)\nINSIDE(character.65, bathroom.1)\nINSIDE(clothes_jacket.1003, washing_machine.1001)\n\n## Goal States\n[States]\nCLOSED(washing_machine.1001)\nON(washing_machine.1001)\nPLUGGED_IN(washing_machine.1001)\nONTOP(soap.1002, washing_machine.1001)\nONTOP(clothes_jacket.1003, washing_machine.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_417_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash clothes\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| washing_machine.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'RECIPIENT'] |\n| clothes_pants.1001 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| clothes_pants.1002 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| clothes_shirt.1003 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| clothes_shirt.1004 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| soap.1005 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(washing_machine.1000)\nCLOSED(washing_machine.1000)\nOFF(washing_machine.1000)\nPLUGGED_IN(washing_machine.1000)\nINSIDE(soap.1005, washing_machine.1000)\nINSIDE(clothes_shirt.1004, washing_machine.1000)\nINSIDE(clothes_pants.1001, washing_machine.1000)\nINSIDE(clothes_pants.1002, washing_machine.1000)\nINSIDE(clothes_shirt.1003, washing_machine.1000)\n\n## Goal States\n[States]\nCLOSED(washing_machine.1000)\nON(washing_machine.1000)\nPLUGGED_IN(washing_machine.1000)\nONTOP(clothes_pants.1002, washing_machine.1000)\nONTOP(soap.1005, washing_machine.1000)\nONTOP(clothes_pants.1001, washing_machine.1000)\nONTOP(clothes_shirt.1004, washing_machine.1000)\nONTOP(clothes_shirt.1003, washing_machine.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_850_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash clothes\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| washing_machine.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'RECIPIENT'] |\n| clothes_pants.1001 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| laundry_detergent.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(washing_machine.1000)\nCLOSED(washing_machine.1000)\nOFF(washing_machine.1000)\nPLUGGED_IN(washing_machine.1000)\nINSIDE(clothes_pants.1001, washing_machine.1000)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nCLOSED(washing_machine.1000)\nON(washing_machine.1000)\nPLUGGED_IN(washing_machine.1000)\nONTOP(laundry_detergent.1002, washing_machine.1000)\nONTOP(clothes_pants.1001, washing_machine.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_954_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash clothes\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| washing_machine.1001 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'RECIPIENT'] |\n| clothes_dress.1002 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| clothes_pants.1003 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| clothes_shirt.1004 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| clothes_underwear.1005 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| soap.1006 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(washing_machine.1001)\nCLOSED(washing_machine.1001)\nOFF(washing_machine.1001)\nPLUGGED_IN(washing_machine.1001)\nINSIDE(character.65, home_office.319)\nINSIDE(clothes_dress.1002, washing_machine.1001)\nINSIDE(clothes_shirt.1004, washing_machine.1001)\nINSIDE(soap.1006, washing_machine.1001)\nINSIDE(clothes_pants.1003, washing_machine.1001)\nINSIDE(clothes_underwear.1005, washing_machine.1001)\n\n## Goal States\n[States]\nCLOSED(washing_machine.1001)\nON(washing_machine.1001)\nPLUGGED_IN(washing_machine.1001)\nONTOP(clothes_pants.1003, washing_machine.1001)\nONTOP(clothes_shirt.1004, washing_machine.1001)\nONTOP(clothes_underwear.1005, washing_machine.1001)\nONTOP(soap.1006, washing_machine.1001)\nONTOP(clothes_dress.1002, washing_machine.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_11_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(floor_lamp.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_120_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\nCLEAN(light.245)\nOFF(light.245)\nPLUGGED_IN(light.245)\n\n## Goal States\n[States]\nON(light.245)\nPLUGGED_IN(light.245)\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_125_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_OUT(light.411)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_150_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_160_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| controller.1000 | placable_objects | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| controller.1001 | placable_objects | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| light.1002 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nCLEAN(light.1002)\nOFF(light.1002)\nPLUGGED_IN(light.1002)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(light.1002)\nPLUGGED_IN(light.1002)\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_180_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nSITTING(character.65)\nCLEAN(light.245)\nOFF(light.245)\nPLUGGED_IN(light.245)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(light.245)\nPLUGGED_IN(light.245)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_205_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n\n## Initial States\nCLEAN(light.169)\nOFF(light.169)\nPLUGGED_IN(light.169)\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nON(light.169)\nPLUGGED_IN(light.169)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_222_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_232_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| light.1000 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| light.1001 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.1000)\nOFF(light.1000)\nPLUGGED_IN(light.1000)\nCLEAN(light.1001)\nOFF(light.1001)\nPLUGGED_IN(light.1001)\nCLEAN(light.245)\nOFF(light.245)\nPLUGGED_IN(light.245)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(light.245)\nPLUGGED_IN(light.245)\nON(light.1001)\nPLUGGED_IN(light.1001)\nON(light.1000)\nPLUGGED_IN(light.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_310_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| dining_room.201 | Rooms | [] |\n\n## Initial States\nCLEAN(light.169)\nOFF(light.169)\nPLUGGED_IN(light.169)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(light.169)\nPLUGGED_IN(light.169)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_311_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(floor_lamp.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_331_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_345_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| filing_cabinet.399 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nONTOP(remote_control.1000, filing_cabinet.399)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_392_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| light.64 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| character.65 | Characters | [] |\n\n## Initial States\nCLEAN(light.64)\nOFF(light.64)\nPLUGGED_IN(light.64)\n\n## Goal States\n[States]\nON(light.64)\nPLUGGED_IN(light.64)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_394_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.245)\nOFF(light.245)\nPLUGGED_IN(light.245)\n\n## Goal States\n[States]\nON(light.245)\nPLUGGED_IN(light.245)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_432_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(floor_lamp.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_443_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(floor_lamp.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_445_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| light.1000 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.1000)\nOFF(light.1000)\nPLUGGED_IN(light.1000)\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(light.1000)\nPLUGGED_IN(light.1000)\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_511_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.245)\nOFF(light.245)\nPLUGGED_IN(light.245)\n\n## Goal States\n[States]\nON(light.245)\nPLUGGED_IN(light.245)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_585_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| light.1000 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| floor_lamp.1001 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(light.1000)\nOFF(light.1000)\nPLUGGED_IN(light.1000)\nCLEAN(floor_lamp.1001)\nOFF(floor_lamp.1001)\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nCLEAN(light.245)\nOFF(light.245)\nPLUGGED_IN(light.245)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(light.245)\nPLUGGED_IN(light.245)\nON(light.1000)\nPLUGGED_IN(light.1000)\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_604_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| light.64 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| light.1000 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.1000)\nOFF(light.1000)\nPLUGGED_IN(light.1000)\nCLEAN(light.64)\nOFF(light.64)\nPLUGGED_IN(light.64)\n\n## Goal States\n[States]\nON(light.64)\nPLUGGED_IN(light.64)\nON(light.1000)\nPLUGGED_IN(light.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_616_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| light.64 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| character.65 | Characters | [] |\n\n## Initial States\nCLEAN(light.64)\nOFF(light.64)\nPLUGGED_IN(light.64)\n\n## Goal States\n[States]\nON(light.64)\nPLUGGED_IN(light.64)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_705_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(floor_lamp.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_708_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.169)\nOFF(light.169)\nPLUGGED_IN(light.169)\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(light.169)\nPLUGGED_IN(light.169)\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_715_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(light.169)\nOFF(light.169)\nPLUGGED_OUT(light.169)\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\n\n## Goal States\n[States]\nON(light.169)\nPLUGGED_IN(light.169)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_737_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_780_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| light.1000 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.1000)\nOFF(light.1000)\nPLUGGED_IN(light.1000)\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nCLEAN(light.245)\nOFF(light.245)\nPLUGGED_IN(light.245)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(light.245)\nPLUGGED_IN(light.245)\nON(light.1000)\nPLUGGED_IN(light.1000)\nON(light.411)\nPLUGGED_IN(light.411)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_812_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| dining_room.201 | Rooms | [] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(light.169)\nOFF(light.169)\nPLUGGED_IN(light.169)\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(light.169)\nPLUGGED_IN(light.169)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_835_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(floor_lamp.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_85_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n\n## Initial States\nCLEAN(light.245)\nOFF(light.245)\nPLUGGED_IN(light.245)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(light.245)\nPLUGGED_IN(light.245)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_874_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Turn on light\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.169)\nOFF(light.169)\nPLUGGED_IN(light.169)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(light.169)\nPLUGGED_IN(light.169)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_491_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Brush teeth\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| toothbrush.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n| tooth_paste.1001 | placable_objects | ['CAN_OPEN', 'CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_LH(character.65, tooth_paste.1001)\nHOLDS_RH(character.65, toothbrush.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_696_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Brush teeth\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| tooth_paste.1000 | placable_objects | ['CAN_OPEN', 'CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| toothbrush.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nHOLDS_LH(character.65, toothbrush.1001)\nHOLDS_RH(character.65, tooth_paste.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1003_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| walllamp.351 | Lamps | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, bedroom.67)\nONTOP(keyboard.415, desk.357)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\nSWITCHOFF\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_115_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_407_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| address_book.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_430_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_481_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| mail.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n| button.1001 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\nSWITCHOFF\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_622_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(keyboard.415)\nPLUGGED_OUT(keyboard.415)\nCLEAN(computer.417)\nOFF(computer.417)\nCLEAN(mouse.413)\nPLUGGED_OUT(mouse.413)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_699_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| mail.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n| check.1001 | placable_objects | ['GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nCLEAN(mail.1000)\nCLOSED(mail.1000)\nINSIDE(character.65, dining_room.201)\nINSIDE(check.1001, mail.1000)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_824_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_87_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| laptop.1000 | placable_objects | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(laptop.1000)\nOFF(laptop.1000)\nPLUGGED_IN(laptop.1000)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(laptop.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_986_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| hair.2012 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\nSWITCHOFF\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_996_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Write an email\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| chair.1000 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| computer.1001 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| keyboard.1002 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n\n## Initial States\nCLEAN(computer.1001)\nOFF(computer.1001)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTYPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1004_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Put groceries in Fridge\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| food_food.1000 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nOPEN(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(food_food.1000, freezer.289)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_152_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Put groceries in Fridge\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| food_food.1000 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nOPEN(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(food_food.1000, freezer.289)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_298_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Put groceries in Fridge\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n| food_food.1000 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nOPEN(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(food_food.1000, freezer.289)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_609_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Put groceries in Fridge\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| food_food.1000 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nOPEN(freezer.289)\nPLUGGED_IN(freezer.289)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_703_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Put groceries in Fridge\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| food_food.1000 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nOPEN(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(food_food.1000, freezer.289)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_772_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Put groceries in Fridge\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| milk.1000 | placable_objects | ['CAN_OPEN', 'DRINKABLE', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| food_turkey.1001 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| food_egg.1002 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| food_egg.1003 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| food_egg.1004 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| food_fish.1005 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| food_chicken.1006 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nOPEN(freezer.289)\nPLUGGED_IN(freezer.289)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_837_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Put groceries in Fridge\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| coffe_maker.290 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'RECIPIENT'] |\n| toaster.292 | Appliances | ['HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| microwave.297 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| food_food.1000 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| food_cheese.1001 | placable_objects | ['CREAM', 'CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| milk.1002 | placable_objects | ['CAN_OPEN', 'DRINKABLE', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| food_vegetable.1003 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| food_egg.1004 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| colander.2003 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n| food_food.2004 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nOPEN(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(food_cheese.1001, freezer.289)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_158_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to toilet\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| toilet.37 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SITTABLE'] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n\n## Initial States\nSITTING(character.65)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nFACING(character.65, toilet.37)\nINSIDE(character.65, bathroom.1)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_323_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to toilet\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| toilet.37 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SITTABLE'] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n\n## Initial States\nCLEAN(toilet.37)\nCLOSED(toilet.37)\nOFF(toilet.37)\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nONTOP(character.65, toilet.37)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_430_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to toilet\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| toilet.37 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SITTABLE'] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| toilet_paper.1000 | placable_objects | ['COVER_OBJECT', 'CUTTABLE', 'GRABBABLE', 'HANGABLE', 'HAS_PAPER', 'MOVABLE'] |\n| soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nONTOP(character.65, toilet.37)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_478_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to toilet\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| toilet.37 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SITTABLE'] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nONTOP(character.65, toilet.37)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_496_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to toilet\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| toilet.37 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SITTABLE'] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nFACING(character.65, toilet.37)\nINSIDE(character.65, bathroom.1)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_624_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to toilet\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dresser.108 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| toilet.1000 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SITTABLE'] |\n| toilet_paper.1001 | placable_objects | ['COVER_OBJECT', 'CUTTABLE', 'GRABBABLE', 'HANGABLE', 'HAS_PAPER', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nONTOP(character.65, toilet.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_188_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Change TV channel\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\nHOLDS_RH(character.65, remote_control.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH or PUSH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_803_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Change TV channel\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n| hair.2004 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, remote_control.1000)\nHOLDS_RH(character.65, remote_control.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH or PUSH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_960_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Change TV channel\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\nHOLDS_RH(character.65, remote_control.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH or PUSH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_101_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1068_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_153_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_196_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_198_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_201_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_232_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_234_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_343_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.75 | Floor | ['SURFACES'] |\n| floor.76 | Floor | ['SURFACES'] |\n| wall.83 | Walls | [] |\n| wall.84 | Walls | [] |\n| chair.103 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.104 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.166 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.167 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.168 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| computer.170 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| cpuscreen.171 | Electronics | [] |\n| floor.207 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.210 | Walls | [] |\n| bookshelf.233 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n\n## Initial States\nCLEAN(computer.170)\nOFF(computer.170)\nONTOP(keyboard.168, desk.104)\n\n## Goal States\n[States]\nON(computer.170)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_373_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_406_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| chair.103 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| keyboard.168 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.170 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.170)\nOFF(computer.170)\n\n## Goal States\n[States]\nON(computer.170)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_409_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_419_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| hair.2008 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_433_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| chair.103 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| mouse.166 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| keyboard.168 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.170 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.170)\nOFF(computer.170)\n\n## Goal States\n[States]\nON(computer.170)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_437_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| hair.2014 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_440_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| chair.103 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.104 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.166 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.167 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.168 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.170 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| cpuscreen.171 | Electronics | [] |\n\n## Initial States\nCLEAN(computer.170)\nOFF(computer.170)\n\n## Goal States\n[States]\nON(computer.170)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_453_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_46_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_475_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_503_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_670_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| walllamp.351 | Lamps | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(desk.357)\nCLOSED(desk.357)\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nCLEAN(computer.417)\nOFF(computer.417)\nCLEAN(mouse.413)\nPLUGGED_OUT(mouse.413)\nCLEAN(keyboard.415)\nPLUGGED_OUT(keyboard.415)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, bedroom.67)\nINSIDE(mouse.413, desk.357)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_719_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_757_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| mouse.166 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| keyboard.168 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.170 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.170)\nOFF(computer.170)\n\n## Goal States\n[States]\nON(computer.170)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_787_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_795_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| chair.103 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| keyboard.168 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.170 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| home_office.319 | Rooms | [] |\n\n## Initial States\nCLEAN(computer.170)\nOFF(computer.170)\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nON(computer.170)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_819_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| hair.2004 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_874_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_910_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_91_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_93_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| check.1000 | placable_objects | ['GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n| homework.1001 | placable_objects | ['GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n| hair.2005 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_962_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Work\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| button.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(computer.417)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_190_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| bowl.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n| dishwasher.1001 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| plate.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dish_soap.1003 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1001)\nCLOSED(dishwasher.1001)\nOFF(dishwasher.1001)\nINSIDE(plate.1002, dishwasher.1001)\nINSIDE(character.65, home_office.319)\nINSIDE(dish_soap.1003, dishwasher.1001)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1001)\nON(dishwasher.1001)\nONTOP(plate.1002, dishwasher.1001)\nONTOP(bowl.1000, dishwasher.1001)\nONTOP(dish_soap.1003, dishwasher.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_201_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| dishwasher.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dish_soap.1002 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1000)\nCLOSED(dishwasher.1000)\nOFF(dishwasher.1000)\nINSIDE(plate.1001, dishwasher.1000)\nINSIDE(character.65, home_office.319)\nINSIDE(dish_soap.1002, dishwasher.1000)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1000)\nON(dishwasher.1000)\nONTOP(dish_soap.1002, dishwasher.1000)\nONTOP(plate.1001, dishwasher.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_223_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| dishwasher.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| dish_soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| plate.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1003 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n\n## Initial States\nCLEAN(dishwasher.1000)\nCLOSED(dishwasher.1000)\nOFF(dishwasher.1000)\nINSIDE(dish_soap.1001, dishwasher.1000)\nINSIDE(character.65, home_office.319)\nINSIDE(plate.1002, dishwasher.1000)\nINSIDE(plate.1003, dishwasher.1000)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1000)\nON(dishwasher.1000)\nONTOP(plate.1002, dishwasher.1000)\nONTOP(plate.1003, dishwasher.1000)\nONTOP(dish_soap.1001, dishwasher.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_327_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| coffe_maker.290 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'RECIPIENT'] |\n| toaster.292 | Appliances | ['HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| microwave.297 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n| dishwasher.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dish_soap.1002 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| food_jam.2011 | placable_objects | ['CAN_OPEN', 'CREAM', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1000)\nCLOSED(dishwasher.1000)\nOFF(dishwasher.1000)\nINSIDE(character.65, home_office.319)\nONTOP(plate.1001, kitchen_counter.230)\nINSIDE(plate.1001, dishwasher.1000)\nINSIDE(dish_soap.1002, dishwasher.1000)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1000)\nON(dishwasher.1000)\nONTOP(dish_soap.1002, dishwasher.1000)\nONTOP(plate.1001, dishwasher.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_383_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| dishwasher.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dish_soap.1003 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| food_food.2017 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1000)\nCLOSED(dishwasher.1000)\nOFF(dishwasher.1000)\nINSIDE(character.65, home_office.319)\nONTOP(food_food.2017, plate.1002)\nINSIDE(plate.1001, dishwasher.1000)\nINSIDE(plate.1002, dishwasher.1000)\nINSIDE(dish_soap.1003, dishwasher.1000)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1000)\nON(dishwasher.1000)\nONTOP(dish_soap.1003, dishwasher.1000)\nONTOP(plate.1002, dishwasher.1000)\nONTOP(plate.1001, dishwasher.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_417_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dishwasher.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| drinking_glass.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| drinking_glass.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| plate.1003 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| fork.1004 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| dish_soap.1005 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1000)\nCLOSED(dishwasher.1000)\nOFF(dishwasher.1000)\nINSIDE(dish_soap.1005, dishwasher.1000)\nINSIDE(fork.1004, dishwasher.1000)\nINSIDE(drinking_glass.1001, dishwasher.1000)\nINSIDE(drinking_glass.1002, dishwasher.1000)\nINSIDE(plate.1003, dishwasher.1000)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1000)\nON(dishwasher.1000)\nONTOP(drinking_glass.1002, dishwasher.1000)\nONTOP(fork.1004, dishwasher.1000)\nONTOP(drinking_glass.1001, dishwasher.1000)\nONTOP(plate.1003, dishwasher.1000)\nONTOP(dish_soap.1005, dishwasher.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_487_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| plate.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dishwasher.1001 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| fork.1002 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| cup.1003 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| spoon.1004 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| dish_soap.1005 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1001)\nCLOSED(dishwasher.1001)\nOFF(dishwasher.1001)\nINSIDE(fork.1002, dishwasher.1001)\nINSIDE(spoon.1004, dishwasher.1001)\nINSIDE(character.65, bedroom.67)\nINSIDE(cup.1003, dishwasher.1001)\nINSIDE(dish_soap.1005, dishwasher.1001)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1001)\nON(dishwasher.1001)\nONTOP(dish_soap.1005, dishwasher.1001)\nONTOP(fork.1002, dishwasher.1001)\nONTOP(spoon.1004, dishwasher.1001)\nONTOP(cup.1003, dishwasher.1001)\nONTOP(plate.1000, dishwasher.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_650_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| table.226 | Furniture | ['MOVABLE', 'SURFACES'] |\n| home_office.319 | Rooms | [] |\n| plate.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dishwasher.1001 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| pot.1002 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n| dish_soap.1003 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1001)\nCLOSED(dishwasher.1001)\nOFF(dishwasher.1001)\nINSIDE(character.65, home_office.319)\nONTOP(pot.1002, table.226)\nINSIDE(pot.1002, dishwasher.1001)\nONTOP(plate.1000, table.226)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1001)\nON(dishwasher.1001)\nONTOP(dish_soap.1003, dishwasher.1001)\nONTOP(plate.1000, dishwasher.1001)\nONTOP(pot.1002, dishwasher.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_783_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| dishwasher.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1003 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1004 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1005 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| cup.1006 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| dish_soap.1007 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1000)\nCLOSED(dishwasher.1000)\nOFF(dishwasher.1000)\nINSIDE(plate.1005, dishwasher.1000)\nINSIDE(character.65, home_office.319)\nINSIDE(plate.1004, dishwasher.1000)\nINSIDE(plate.1001, dishwasher.1000)\nINSIDE(plate.1002, dishwasher.1000)\nINSIDE(plate.1003, dishwasher.1000)\nINSIDE(cup.1006, dishwasher.1000)\nINSIDE(dish_soap.1007, dishwasher.1000)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1000)\nON(dishwasher.1000)\nONTOP(cup.1006, dishwasher.1000)\nONTOP(plate.1004, dishwasher.1000)\nONTOP(plate.1002, dishwasher.1000)\nONTOP(dish_soap.1007, dishwasher.1000)\nONTOP(plate.1005, dishwasher.1000)\nONTOP(plate.1001, dishwasher.1000)\nONTOP(plate.1003, dishwasher.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_815_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| table.226 | Furniture | ['MOVABLE', 'SURFACES'] |\n| plate.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dishwasher.1001 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| dish_soap.1002 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1001)\nCLOSED(dishwasher.1001)\nOFF(dishwasher.1001)\nINSIDE(dish_soap.1002, dishwasher.1001)\nINSIDE(character.65, bedroom.67)\nONTOP(plate.1000, table.226)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1001)\nON(dishwasher.1001)\nONTOP(dish_soap.1002, dishwasher.1001)\nONTOP(plate.1000, dishwasher.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_826_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| dishwasher.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| fork.1001 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| fork.1002 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| plate.1003 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1004 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1005 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1006 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| cup.1007 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| cup.1008 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| cup.1009 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| cup.1010 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| knife.1011 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| knife.1012 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| spoon.1013 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| spoon.1014 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| spoon.1015 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| dish_soap.1016 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1000)\nCLOSED(dishwasher.1000)\nOFF(dishwasher.1000)\nINSIDE(plate.1005, dishwasher.1000)\nINSIDE(knife.1011, dishwasher.1000)\nINSIDE(cup.1009, dishwasher.1000)\nINSIDE(spoon.1014, dishwasher.1000)\nINSIDE(spoon.1015, dishwasher.1000)\nINSIDE(cup.1010, dishwasher.1000)\nINSIDE(spoon.1013, dishwasher.1000)\nINSIDE(character.65, bathroom.1)\nINSIDE(plate.1004, dishwasher.1000)\nINSIDE(fork.1001, dishwasher.1000)\nINSIDE(fork.1002, dishwasher.1000)\nINSIDE(plate.1003, dishwasher.1000)\nINSIDE(knife.1012, dishwasher.1000)\nINSIDE(dish_soap.1016, dishwasher.1000)\nINSIDE(plate.1006, dishwasher.1000)\nINSIDE(cup.1007, dishwasher.1000)\nINSIDE(cup.1008, dishwasher.1000)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1000)\nON(dishwasher.1000)\nONTOP(cup.1008, dishwasher.1000)\nONTOP(fork.1001, dishwasher.1000)\nONTOP(plate.1004, dishwasher.1000)\nONTOP(spoon.1013, dishwasher.1000)\nONTOP(knife.1011, dishwasher.1000)\nONTOP(dish_soap.1016, dishwasher.1000)\nONTOP(cup.1007, dishwasher.1000)\nONTOP(cup.1009, dishwasher.1000)\nONTOP(spoon.1014, dishwasher.1000)\nONTOP(plate.1006, dishwasher.1000)\nONTOP(plate.1005, dishwasher.1000)\nONTOP(knife.1012, dishwasher.1000)\nONTOP(plate.1003, dishwasher.1000)\nONTOP(cup.1010, dishwasher.1000)\nONTOP(spoon.1015, dishwasher.1000)\nONTOP(fork.1002, dishwasher.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_856_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| dishwasher.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dish_soap.1002 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1000)\nCLOSED(dishwasher.1000)\nOFF(dishwasher.1000)\nINSIDE(plate.1001, dishwasher.1000)\nINSIDE(dish_soap.1002, dishwasher.1000)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1000)\nON(dishwasher.1000)\nONTOP(dish_soap.1002, dishwasher.1000)\nONTOP(plate.1001, dishwasher.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_911_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes with dishwasher\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dishwasher.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'HAS_SWITCH'] |\n| cup.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| plate.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dish_soap.1003 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(dishwasher.1000)\nCLOSED(dishwasher.1000)\nOFF(dishwasher.1000)\nINSIDE(cup.1001, dishwasher.1000)\nINSIDE(plate.1002, dishwasher.1000)\nINSIDE(dish_soap.1003, dishwasher.1000)\n\n## Goal States\n[States]\nCLOSED(dishwasher.1000)\nON(dishwasher.1000)\nONTOP(dish_soap.1003, dishwasher.1000)\nONTOP(cup.1001, dishwasher.1000)\nONTOP(plate.1002, dishwasher.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1027_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to sleep\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| bed.105 | Furniture | ['LIEABLE', 'SITTABLE', 'SURFACES'] |\n| dining_room.201 | Rooms | [] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, bed.105)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nSLEEP\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_181_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to sleep\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| bed.105 | Furniture | ['LIEABLE', 'SITTABLE', 'SURFACES'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, bed.105)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nSLEEP\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_244_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to sleep\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| bed.105 | Furniture | ['LIEABLE', 'SITTABLE', 'SURFACES'] |\n| dining_room.201 | Rooms | [] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, bed.105)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nSLEEP\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_269_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to sleep\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| bed.105 | Furniture | ['LIEABLE', 'SITTABLE', 'SURFACES'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, bed.105)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nSLEEP\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_509_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to sleep\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| bed.105 | Furniture | ['LIEABLE', 'SITTABLE', 'SURFACES'] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| dining_room.201 | Rooms | [] |\n| clothes_pants.1000 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| clothes_shirt.1001 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| clothes_shirt.1002 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| clothes_pants.1003 | placable_objects | ['CLOTHES', 'GRABBABLE', 'HANGABLE', 'MOVABLE'] |\n| sheets.1004 | placable_objects | ['COVER_OBJECT', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(light.169)\nON(light.169)\nPLUGGED_IN(light.169)\nONTOP(clothes_pants.1000, character.65)\nONTOP(clothes_shirt.1001, character.65)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, bed.105)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nSLEEP\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_875_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Go to sleep\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| floor.70 | Floor | ['SURFACES'] |\n| floor.71 | Floor | ['SURFACES'] |\n| wall.80 | Walls | [] |\n| wall.82 | Walls | [] |\n| window.86 | Windows | [] |\n| tablelamp.97 | Lamps | ['HAS_SWITCH'] |\n| tablelamp.98 | Lamps | ['HAS_SWITCH'] |\n| nightstand.100 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| nightstand.102 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| bed.105 | Furniture | ['LIEABLE', 'SITTABLE', 'SURFACES'] |\n| mat.173 | Decor | ['GRABBABLE', 'LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| drawing.176 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| curtain.179 | Decor | ['CAN_OPEN', 'COVER_OBJECT', 'MOVABLE'] |\n| curtain.180 | Decor | ['CAN_OPEN', 'COVER_OBJECT', 'MOVABLE'] |\n| curtain.181 | Decor | ['CAN_OPEN', 'COVER_OBJECT', 'MOVABLE'] |\n| pillow.182 | Decor | ['GRABBABLE', 'MOVABLE'] |\n| pillow.183 | Decor | ['GRABBABLE', 'MOVABLE'] |\n| dining_room.201 | Rooms | [] |\n| floor.207 | Floor | ['SURFACES'] |\n\n## Initial States\nONTOP(pillow.182, floor.207)\nFACING(pillow.182, drawing.176)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, bed.105)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nSLEEP\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_102_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| hands_both.1000 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_154_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1001 | placable_objects | ['BODY_PART'] |\n| towel.1002 | placable_objects | ['COVER_OBJECT', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1003 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_176_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1001 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_214_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_258_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(faucet.232)\nOFF(faucet.232)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_499_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| water.1000 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1002 | placable_objects | ['BODY_PART'] |\n| paper_towel.1003 | placable_objects | ['COVER_OBJECT', 'CUTTABLE', 'GRABBABLE', 'HANGABLE', 'HAS_PAPER', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_517_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1001 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\nONTOP(soap.1000, sink.42)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_549_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| hands_both.1000 | placable_objects | ['BODY_PART'] |\n| soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_562_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| water.1000 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| hands_both.1001 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nINSIDE(water.1000, hands_both.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_580_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| hands_both.1000 | placable_objects | ['BODY_PART'] |\n| soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| towel.1002 | placable_objects | ['COVER_OBJECT', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_657_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| hands_both.1000 | placable_objects | ['BODY_PART'] |\n| soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| towel.1002 | placable_objects | ['COVER_OBJECT', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_660_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1001 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_672_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| hands_both.1000 | placable_objects | ['BODY_PART'] |\n| soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| towel.1002 | placable_objects | ['COVER_OBJECT', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_710_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| water.1000 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1002 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_741_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1001 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_750_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| hands_both.1002 | placable_objects | ['BODY_PART'] |\n| towel.1003 | placable_objects | ['COVER_OBJECT', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nINSIDE(water.1001, hands_both.1002)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_805_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| towel.1001 | placable_objects | ['COVER_OBJECT', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_80_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1001 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_813_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| water.1000 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| hands_both.1001 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_928_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| hands_both.1000 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_995_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash hands\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| faucet.43 | Furniture | ['HAS_SWITCH'] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| hands_both.1001 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nRINSE or WASH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1035_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_113_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_12_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_137_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_203_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| hair.2014 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_220_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_242_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_279_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_287_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_292_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| hair.2006 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_297_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_381_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_388_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_38_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| face.1001 | placable_objects | ['BODY_PART'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_429_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_437_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| hair.2013 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_451_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_469_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_479_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_502_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_612_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_856_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pet cat\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| cat.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNEXT_TO(character.65, cat.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nTOUCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_384_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Browse internet\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| walllamp.351 | Lamps | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, bathroom.1)\nONTOP(keyboard.415, desk.357)\n\n## Goal States\n[States]\nON(computer.417)\nHOLDS_LH(character.65, keyboard.415)\nFACING(character.65, computer.417)\nINSIDE(character.65, home_office.319)\nHOLDS_RH(character.65, mouse.413)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_540_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Browse internet\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nFACING(character.65, phone.1000)\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_60_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Browse internet\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| walllamp.351 | Lamps | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| laptop.1000 | placable_objects | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(laptop.1000)\nOFF(laptop.1000)\nPLUGGED_IN(laptop.1000)\nONTOP(keyboard.415, desk.357)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(laptop.1000)\nPLUGGED_IN(laptop.1000)\nFACING(character.65, laptop.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_71_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Browse internet\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| walllamp.351 | Lamps | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, bedroom.67)\nONTOP(keyboard.415, desk.357)\n\n## Goal States\n[States]\nON(computer.417)\nHOLDS_LH(character.65, keyboard.415)\nFACING(character.65, computer.417)\nINSIDE(character.65, home_office.319)\nHOLDS_RH(character.65, mouse.413)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_7_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Browse internet\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| floor.208 | Floor | ['SURFACES'] |\n| wall.213 | Walls | [] |\n| home_office.319 | Rooms | [] |\n| floor.325 | Floors | ['SURFACES'] |\n| floor.326 | Floors | ['SURFACES'] |\n| wall.330 | Walls | [] |\n| wall.331 | Walls | [] |\n| doorjamb.346 | Doors | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| powersocket.412 | Electronics | [] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(computer.417)\nOFF(computer.417)\nONTOP(mouse.413, desk.357)\nONTOP(mouse.413, mousepad.414)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(computer.417)\nFACING(character.65, computer.417)\nINSIDE(character.65, home_office.319)\nHOLDS_RH(character.65, mouse.413)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1070_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash teeth\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| toothbrush_holder.1000 | placable_objects | ['CONTAINERS', 'GRABBABLE', 'MOVABLE'] |\n| toothbrush.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n| tooth_paste.1002 | placable_objects | ['CAN_OPEN', 'CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| teeth.1003 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\nONTOP(toothbrush.1001, toothbrush_holder.1000)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, toothbrush.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_313_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash teeth\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| tooth_paste.1000 | placable_objects | ['CAN_OPEN', 'CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| toothbrush.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n| teeth.1002 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| towel.1003 | placable_objects | ['COVER_OBJECT', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nONTOP(tooth_paste.1000, sink.42)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_LH(character.65, toothbrush.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_689_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash teeth\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| toothbrush_holder.1000 | placable_objects | ['CONTAINERS', 'GRABBABLE', 'MOVABLE'] |\n| tooth_paste.1001 | placable_objects | ['CAN_OPEN', 'CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| toothbrush.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n\n## Initial States\nONTOP(tooth_paste.1001, toothbrush_holder.1000)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_LH(character.65, toothbrush.1002)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_718_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash teeth\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| tooth_paste.1000 | placable_objects | ['CAN_OPEN', 'CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| toothbrush.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_LH(character.65, toothbrush.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1049_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| dvd_player.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(dvd_player.1000)\nCLOSED(dvd_player.1000)\nOFF(dvd_player.1000)\nPLUGGED_IN(dvd_player.1000)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nCLOSED(dvd_player.1000)\nON(dvd_player.1000)\nPLUGGED_IN(dvd_player.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_113_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| cd_player.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(cd_player.1000)\nCLOSED(cd_player.1000)\nOFF(cd_player.1000)\nPLUGGED_IN(cd_player.1000)\n\n## Goal States\n[States]\nCLOSED(cd_player.1000)\nON(cd_player.1000)\nPLUGGED_IN(cd_player.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_161_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_173_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| cd_player.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n| headset.1001 | placable_objects | ['CLOTHES', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(cd_player.1000)\nCLOSED(cd_player.1000)\nOFF(cd_player.1000)\nPLUGGED_OUT(cd_player.1000)\nSITTING(character.65)\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nCLOSED(cd_player.1000)\nON(cd_player.1000)\nPLUGGED_IN(cd_player.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_23_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_263_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_305_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| chair.103 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.104 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.166 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.167 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.168 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| cpuscreen.171 | Electronics | [] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(light.169)\nOFF(light.169)\nPLUGGED_IN(light.169)\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_363_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| music_stand.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE', 'SURFACES'] |\n| dvd_player.1001 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n| remote_control.1002 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(dvd_player.1001)\nCLOSED(dvd_player.1001)\nOFF(dvd_player.1001)\nPLUGGED_IN(dvd_player.1001)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nCLOSED(dvd_player.1001)\nON(dvd_player.1001)\nPLUGGED_IN(dvd_player.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_385_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| cd_player.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(cd_player.1000)\nCLOSED(cd_player.1000)\nOFF(cd_player.1000)\nPLUGGED_IN(cd_player.1000)\n\n## Goal States\n[States]\nCLOSED(cd_player.1000)\nON(cd_player.1000)\nPLUGGED_IN(cd_player.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_403_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n| hair.2004 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_415_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| headset.1000 | placable_objects | ['CLOTHES', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nONTOP(headset.1000, character.65)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_462_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| chair.103 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n| headset.1001 | placable_objects | ['CLOTHES', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_463_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_503_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| chair.103 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| cd_player.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n| remote_control.1001 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(cd_player.1000)\nCLOSED(cd_player.1000)\nOFF(cd_player.1000)\nPLUGGED_IN(cd_player.1000)\n\n## Goal States\n[States]\nCLOSED(cd_player.1000)\nON(cd_player.1000)\nPLUGGED_IN(cd_player.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_59_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| headset.1001 | placable_objects | ['CLOTHES', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nONTOP(headset.1001, character.65)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_737_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_773_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_910_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_IN(stereo.1000)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nCLOSED(stereo.1000)\nON(stereo.1000)\nPLUGGED_IN(stereo.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_953_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Listen to music\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| music_stand.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE', 'SURFACES'] |\n| cd_player.1001 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(cd_player.1001)\nCLOSED(cd_player.1001)\nOFF(cd_player.1001)\nPLUGGED_IN(cd_player.1001)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nCLOSED(cd_player.1001)\nON(cd_player.1001)\nPLUGGED_IN(cd_player.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1057_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n| hair.2001 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_117_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_134_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_OUT(television.410)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_170_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_197_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n| electrical_outlet.1001 | placable_objects | ['HAS_SWITCH'] |\n\n## Initial States\nCLEAN(electrical_outlet.1001)\nOFF(electrical_outlet.1001)\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_21_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| table.355 | Furniture | ['MOVABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_225_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| coffee_table.1000 | placable_objects | ['MOVABLE', 'SURFACES'] |\n| remote_control.1001 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nONTOP(remote_control.1001, coffee_table.1000)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_259_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_307_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_329_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_342_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_377_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_383_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_411_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_454_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_459_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_548_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| television.248 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.248)\nOFF(television.248)\nPLUGGED_IN(television.248)\n\n## Goal States\n[States]\nON(television.248)\nPLUGGED_IN(television.248)\nFACING(character.65, television.248)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_595_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n| coffee_table.1001 | placable_objects | ['MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_684_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_74_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_806_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_98_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Watch TV\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nON(television.410)\nPLUGGED_IN(television.410)\nFACING(character.65, television.410)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nLOOKAT or WATCH\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1064_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_156_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n| cup.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, cup.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_171_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| cupboard.229 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| cup.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(cupboard.229)\nCLOSED(cupboard.229)\nINSIDE(character.65, bathroom.1)\nINSIDE(cup.1000, cupboard.229)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, cup.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_175_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n| cup.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, cup.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_181_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(water.1001, freezer.289)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_26_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| cup.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| hair.2009 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nHOLDS_RH(character.65, cup.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_286_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| cupboard.229 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(cupboard.229)\nCLOSED(cupboard.229)\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(water.1001, freezer.289)\nINSIDE(character.65, bathroom.1)\nINSIDE(water_glass.1000, cupboard.229)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_291_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| water.1000 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| water_glass.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(water_glass.1001, dining_room.201)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_317_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| kitchen_cabinet.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| cup.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nCLEAN(kitchen_cabinet.1000)\nCLOSED(kitchen_cabinet.1000)\nINSIDE(character.65, bathroom.1)\nINSIDE(cup.1001, kitchen_cabinet.1000)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, cup.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_488_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| cup.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\nONTOP(water.1001, sink.231)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, cup.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_510_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| water.1000 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| drinking_glass.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, drinking_glass.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_528_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n| drinking_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(character.65, home_office.319)\nINSIDE(drinking_glass.1000, freezer.289)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, drinking_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_532_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| kitchen_cabinet.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| drinking_glass.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\nINSIDE(drinking_glass.1001, kitchen_cabinet.1000)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, drinking_glass.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_589_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| cup.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, cup.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_600_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nINSIDE(water_glass.1000, freezer.289)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_662_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_688_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| cupboard.229 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\nINSIDE(water_glass.1000, cupboard.229)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1000)\nHOLDS_LH(character.65, water_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_787_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_788_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| kitchen_cabinet.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| drinking_glass.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(faucet.232)\nOFF(faucet.232)\nCLEAN(kitchen_cabinet.1000)\nCLOSED(kitchen_cabinet.1000)\nINSIDE(character.65, bathroom.1)\nINSIDE(drinking_glass.1001, kitchen_cabinet.1000)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, drinking_glass.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_814_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| cupboard.229 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| home_office.319 | Rooms | [] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(cupboard.229)\nCLOSED(cupboard.229)\nINSIDE(character.65, home_office.319)\nINSIDE(water.1001, cupboard.229)\nINSIDE(water_glass.1000, cupboard.229)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_850_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n| kitchen_cabinet.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| water_glass.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nCLEAN(faucet.232)\nOFF(faucet.232)\nCLEAN(kitchen_cabinet.1000)\nCLOSED(kitchen_cabinet.1000)\nINSIDE(water_glass.1001, kitchen_cabinet.1000)\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_861_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| cup.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\nONTOP(cup.1000, sink.231)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, cup.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_878_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Drink\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| cupboard.229 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| home_office.319 | Rooms | [] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(cupboard.229)\nCLOSED(cupboard.229)\nINSIDE(character.65, home_office.319)\nINSIDE(water.1001, cupboard.229)\nINSIDE(water_glass.1000, cupboard.229)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, water_glass.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nDRINK\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1073_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1088_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| filing_cabinet.399 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nONTOP(novel.1000, filing_cabinet.399)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_15_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| address_book.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, address_book.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_163_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_16_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n| coffee_table.1001 | placable_objects | ['MOVABLE', 'SURFACES'] |\n\n## Initial States\nONTOP(novel.1000, coffee_table.1001)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_192_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_208_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n| novel.1001 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n| hair.2006 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(floor_lamp.1000)\nOFF(floor_lamp.1000)\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_221_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| novel.1001 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1001)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_241_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nSITTING(character.65)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_341_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| cupboard.229 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| plate.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| novel.1001 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n| coffee_table.1002 | placable_objects | ['MOVABLE', 'SURFACES'] |\n| spectacles.1003 | placable_objects | ['CLOTHES', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(cupboard.229)\nCLOSED(cupboard.229)\nINSIDE(novel.1001, cupboard.229)\nINSIDE(spectacles.1003, cupboard.229)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1001)\nHOLDS_LH(character.65, spectacles.1003)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_484_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| computer.417 | Electronics | ['HAS_SWITCH', 'LOOKABLE'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_504_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_508_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_544_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_57_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_617_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| tablelamp.97 | Lamps | ['HAS_SWITCH'] |\n| nightstand.100 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| bed.105 | Furniture | ['LIEABLE', 'SITTABLE', 'SURFACES'] |\n| drawing.176 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| home_office.319 | Rooms | [] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nCLEAN(nightstand.100)\nCLOSED(nightstand.100)\nINSIDE(character.65, home_office.319)\nINSIDE(novel.1000, nightstand.100)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_628_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_688_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n| spectacles.1001 | placable_objects | ['CLOTHES', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_OUT(light.411)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_693_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| chair.103 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_821_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_86_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| filing_cabinet.399 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nONTOP(novel.1000, filing_cabinet.399)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_896_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n| bookmark.1001 | placable_objects | ['GRABBABLE', 'HAS_PAPER', 'MOVABLE'] |\n\n## Initial States\nONTOP(novel.1000, desk.357)\n\n## Goal States\n[States]\nHOLDS_LH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_897_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Read book\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| table.355 | Furniture | ['MOVABLE', 'SURFACES'] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| novel.1000 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, novel.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nREAD or LOOKAT\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_1083_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Cook some food\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| oven.295 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| pot.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n| food_vegetable.1001 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| pot.1003 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n\n## Initial States\nCLEAN(oven.295)\nCLOSED(oven.295)\nOFF(oven.295)\nPLUGGED_IN(oven.295)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nCLOSED(oven.295)\nON(oven.295)\nPLUGGED_IN(oven.295)\nONTOP(pot.1003, oven.295)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_392_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Cook some food\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| freezer.289 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| oven.295 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| pot.1001 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n\n## Initial States\nCLEAN(freezer.289)\nCLOSED(freezer.289)\nPLUGGED_IN(freezer.289)\nCLEAN(oven.295)\nCLOSED(oven.295)\nOFF(oven.295)\nPLUGGED_IN(oven.295)\nINSIDE(pot.1001, freezer.289)\n\n## Goal States\n[States]\nCLOSED(oven.295)\nON(oven.295)\nPLUGGED_IN(oven.295)\nONTOP(pot.1001, oven.295)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_755_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Cook some food\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| oven.295 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH'] |\n| home_office.319 | Rooms | [] |\n| kitchen_cabinet.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| pasta.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| sauce_pan.1003 | placable_objects | ['CONTAINERS', 'GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n\n## Initial States\nCLEAN(kitchen_cabinet.1000)\nCLOSED(kitchen_cabinet.1000)\nCLEAN(oven.295)\nCLOSED(oven.295)\nOFF(oven.295)\nPLUGGED_IN(oven.295)\nINSIDE(character.65, home_office.319)\nINSIDE(pasta.1001, kitchen_cabinet.1000)\nINSIDE(water.1002, kitchen_cabinet.1000)\nINSIDE(sauce_pan.1003, kitchen_cabinet.1000)\n\n## Goal States\n[States]\nCLOSED(oven.295)\nON(oven.295)\nPLUGGED_IN(oven.295)\nONTOP(sauce_pan.1003, oven.295)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_124_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| hair.2006 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_137_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_204_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| coffee.1000 | placable_objects | ['DRINKABLE', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_268_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n\n## Initial States\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_297_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| floor.322 | Floors | ['SURFACES'] |\n| floor.323 | Floors | ['SURFACES'] |\n| wall.329 | Walls | [] |\n| wall.333 | Walls | [] |\n| window.348 | Windows | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| chair.356 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| drawing.400 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| mat.401 | Decor | ['GRABBABLE', 'LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| pillow.405 | Decor | ['GRABBABLE', 'MOVABLE'] |\n| curtain.409 | Decor | ['CAN_OPEN', 'COVER_OBJECT', 'MOVABLE'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| floor_lamp.1000 | placable_objects | ['HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(floor_lamp.1000)\nON(floor_lamp.1000)\nINSIDE(character.65, bedroom.67)\nFACING(pillow.405, television.410)\nFACING(pillow.405, drawing.400)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_299_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_300_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_321_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| water_glass.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_332_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_379_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_387_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_390_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_3_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_416_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_438_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_442_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_447_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| coffee_cup.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n| novel.1001 | placable_objects | ['CAN_OPEN', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE', 'READABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_449_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| remote_control.1000 | placable_objects | ['GRABBABLE', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_455_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_456_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_473_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| sheets.1000 | placable_objects | ['COVER_OBJECT', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_490_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_563_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_567_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| light.411 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| stereo.1000 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'SURFACES'] |\n\n## Initial States\nCLEAN(stereo.1000)\nCLOSED(stereo.1000)\nOFF(stereo.1000)\nPLUGGED_OUT(stereo.1000)\nCLEAN(light.411)\nOFF(light.411)\nPLUGGED_IN(light.411)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_570_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_674_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_6_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_742_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_762_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_793_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nCLEAN(television.410)\nOFF(television.410)\nPLUGGED_IN(television.410)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_798_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_932_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_941_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_96_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nSITTING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_976_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Relax on sofa\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nLYING(character.65)\nONTOP(character.65, couch.352)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_149_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| table.355 | Furniture | ['MOVABLE', 'SURFACES'] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| food_food.2003 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nSITTING(character.65)\nINSIDE(character.65, dining_room.201)\nONTOP(phone.1000, table.355)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_154_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| button.1001 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_180_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n| hair.2005 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(phone.247)\nOFF(phone.247)\nPLUGGED_OUT(phone.247)\nSITTING(character.65)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_195_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| couch.352 | Furniture | ['LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| table.355 | Furniture | ['MOVABLE', 'SURFACES'] |\n| television.410 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\nONTOP(phone.1000, table.355)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_211_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_241_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_264_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| shoe-shine_kit.2002 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nONTOP(phone.1000, desk.357)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_265_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| button.1001 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_287_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_352_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| table.226 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mat.236 | Decor | ['GRABBABLE', 'LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nONTOP(phone.247, table.226)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_360_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_388_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_431_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nCLEAN(phone.1000)\nOFF(phone.1000)\nPLUGGED_IN(phone.1000)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_436_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_442_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_474_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nNone\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_482_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| dining_room.201 | Rooms | [] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_497_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| hair.2005 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_553_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_601_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.241 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.242 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.243 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| television.248 | Electronics | ['HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n| button.1000 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nFACING(phone.247, drawing.241)\nFACING(phone.247, wall_clock.249)\nFACING(phone.247, drawing.242)\nFACING(phone.247, television.248)\nFACING(phone.247, drawing.243)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_70_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| fork.2008 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(phone.1000)\nPLUGGED_IN(phone.1000)\nONTOP(phone.1000, desk.357)\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_864_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| hair.2004 | placable_objects | ['BODY_PART', 'CUTTABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_963_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_974_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_976_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| desk.357 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mouse.413 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| mousepad.414 | Electronics | ['MOVABLE', 'SURFACES'] |\n| keyboard.415 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'MOVABLE'] |\n| cpuscreen.416 | Electronics | [] |\n| phone.1000 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n\n## Initial States\nONTOP(phone.1000, desk.357)\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.1000)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_99_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Pick up phone\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| floor.76 | Floor | ['SURFACES'] |\n| floor.77 | Floor | ['SURFACES'] |\n| wall.84 | Walls | [] |\n| wall.85 | Walls | [] |\n| ceiling.94 | Ceiling | [] |\n| ceiling.95 | Ceiling | [] |\n| trashcan.99 | Furniture | ['CAN_OPEN', 'CONTAINERS', 'MOVABLE'] |\n| doorjamb.165 | Doors | [] |\n| light.169 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| drawing.174 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| floor.202 | Floor | ['SURFACES'] |\n| floor.203 | Floor | ['SURFACES'] |\n| floor.206 | Floor | ['SURFACES'] |\n| wall.209 | Walls | [] |\n| wall.211 | Walls | [] |\n| ceiling.216 | Ceiling | [] |\n| ceiling.217 | Ceiling | [] |\n| door.222 | Doors | ['CAN_OPEN'] |\n| table.226 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mat.236 | Decor | ['GRABBABLE', 'LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| drawing.238 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.239 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| drawing.240 | Decor | ['CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'LOOKABLE', 'MOVABLE'] |\n| light.245 | Electronics | ['HAS_PLUG', 'HAS_SWITCH'] |\n| powersocket.246 | Electronics | [] |\n| phone.247 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE'] |\n| wall_clock.249 | Electronics | ['GRABBABLE', 'HAS_PLUG', 'HAS_SWITCH', 'LOOKABLE', 'MOVABLE'] |\n\n## Initial States\nONTOP(phone.247, table.226)\n\n## Goal States\n[States]\nHOLDS_RH(character.65, phone.247)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_183_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Make coffee\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| coffe_maker.290 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'RECIPIENT'] |\n| coffee_filter.1000 | placable_objects | ['GRABBABLE', 'HAS_PAPER', 'MOVABLE'] |\n| ground_coffee.1001 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(coffe_maker.290)\nCLOSED(coffe_maker.290)\nOFF(coffe_maker.290)\nPLUGGED_IN(coffe_maker.290)\nINSIDE(ground_coffee.1001, coffe_maker.290)\nINSIDE(character.65, bathroom.1)\nINSIDE(coffee_filter.1000, coffe_maker.290)\n\n## Goal States\n[States]\nCLOSED(coffe_maker.290)\nON(coffe_maker.290)\nPLUGGED_IN(coffe_maker.290)\nONTOP(ground_coffee.1001, coffe_maker.290)\nONTOP(coffee_filter.1000, coffe_maker.290)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nPOUR\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_229_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Make coffee\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| coffe_maker.290 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'RECIPIENT'] |\n| coffee_filter.1000 | placable_objects | ['GRABBABLE', 'HAS_PAPER', 'MOVABLE'] |\n| ground_coffee.1001 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(coffe_maker.290)\nCLOSED(coffe_maker.290)\nOFF(coffe_maker.290)\nPLUGGED_IN(coffe_maker.290)\nINSIDE(ground_coffee.1001, coffe_maker.290)\nINSIDE(character.65, bedroom.67)\nINSIDE(coffee_filter.1000, coffe_maker.290)\n\n## Goal States\n[States]\nCLOSED(coffe_maker.290)\nON(coffe_maker.290)\nPLUGGED_IN(coffe_maker.290)\nONTOP(ground_coffee.1001, coffe_maker.290)\nONTOP(coffee_filter.1000, coffe_maker.290)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nPOUR\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_310_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Make coffee\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| coffe_maker.290 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'RECIPIENT'] |\n| coffee_filter.1000 | placable_objects | ['GRABBABLE', 'HAS_PAPER', 'MOVABLE'] |\n| ground_coffee.1001 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(coffe_maker.290)\nCLOSED(coffe_maker.290)\nOFF(coffe_maker.290)\nPLUGGED_IN(coffe_maker.290)\nINSIDE(ground_coffee.1001, coffe_maker.290)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nCLOSED(coffe_maker.290)\nON(coffe_maker.290)\nPLUGGED_IN(coffe_maker.290)\nONTOP(ground_coffee.1001, coffe_maker.290)\nONTOP(coffee_filter.1000, coffe_maker.290)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nPOUR\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_721_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Make coffee\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| coffe_maker.290 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'RECIPIENT'] |\n| water.1000 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| coffee_filter.1001 | placable_objects | ['GRABBABLE', 'HAS_PAPER', 'MOVABLE'] |\n| ground_coffee.1002 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(coffe_maker.290)\nCLOSED(coffe_maker.290)\nOFF(coffe_maker.290)\nPLUGGED_OUT(coffe_maker.290)\nINSIDE(ground_coffee.1002, coffe_maker.290)\nINSIDE(coffee_filter.1001, coffe_maker.290)\n\n## Goal States\n[States]\nCLOSED(coffe_maker.290)\nON(coffe_maker.290)\nPLUGGED_IN(coffe_maker.290)\nONTOP(ground_coffee.1002, coffe_maker.290)\nONTOP(coffee_filter.1001, coffe_maker.290)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nPOUR\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_764_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Make coffee\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| coffe_maker.290 | Appliances | ['CAN_OPEN', 'CONTAINERS', 'HAS_PLUG', 'HAS_SWITCH', 'MOVABLE', 'RECIPIENT'] |\n| coffee_filter.1000 | placable_objects | ['GRABBABLE', 'HAS_PAPER', 'MOVABLE'] |\n| ground_coffee.1001 | placable_objects | ['CAN_OPEN', 'GRABBABLE', 'MOVABLE'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nCLEAN(coffe_maker.290)\nCLOSED(coffe_maker.290)\nOFF(coffe_maker.290)\nPLUGGED_IN(coffe_maker.290)\nINSIDE(ground_coffee.1001, coffe_maker.290)\nINSIDE(character.65, bathroom.1)\nINSIDE(coffee_filter.1000, coffe_maker.290)\n\n## Goal States\n[States]\nCLOSED(coffe_maker.290)\nON(coffe_maker.290)\nPLUGGED_IN(coffe_maker.290)\nONTOP(ground_coffee.1001, coffe_maker.290)\nONTOP(coffee_filter.1000, coffe_maker.290)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nPOUR\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_419_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Set up table\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| table.226 | Furniture | ['MOVABLE', 'SURFACES'] |\n| mat.236 | Decor | ['GRABBABLE', 'LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| chair.1000 | Furniture | ['GRABBABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| cloth_napkin.1001 | placable_objects | ['COVER_OBJECT', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE'] |\n| plate.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| knife.1003 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| fork.1004 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| cup.1005 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nONTOP(knife.1003, table.226)\nONTOP(cup.1005, table.226)\nONTOP(plate.1002, table.226)\nONTOP(fork.1004, table.226)\nONTOP(cloth_napkin.1001, table.226)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_446_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Set up table\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| table.226 | Furniture | ['MOVABLE', 'SURFACES'] |\n| cupboard.229 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| mat.236 | Decor | ['GRABBABLE', 'LIEABLE', 'MOVABLE', 'SITTABLE', 'SURFACES'] |\n| home_office.319 | Rooms | [] |\n| plate.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n\n## Initial States\nCLEAN(cupboard.229)\nCLOSED(cupboard.229)\nINSIDE(character.65, home_office.319)\nINSIDE(plate.1001, cupboard.229)\nINSIDE(plate.1000, cupboard.229)\n\n## Goal States\n[States]\nONTOP(plate.1000, table.226)\nONTOP(plate.1001, table.226)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_710_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Set up table\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| table.226 | Furniture | ['MOVABLE', 'SURFACES'] |\n| kitchen_cabinet.1000 | placable_objects | ['CAN_OPEN', 'CONTAINERS', 'SURFACES'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n\n## Initial States\nCLEAN(kitchen_cabinet.1000)\nCLOSED(kitchen_cabinet.1000)\nINSIDE(plate.1001, kitchen_cabinet.1000)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nONTOP(plate.1001, table.226)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_368_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Get some water\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| cloth_napkin.1000 | placable_objects | ['COVER_OBJECT', 'CUTTABLE', 'GRABBABLE', 'HAS_PAPER', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nINSIDE(character.65, dining_room.201)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_729_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Take shower\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| shower.36 | Furniture | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n\n## Initial States\nINSIDE(character.65, dining_room.201)\n\n## Goal States\n[States]\nNEXT_TO(character.65, shower.36)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_975_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Take shower\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| shower.36 | Furniture | [] |\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nNEXT_TO(character.65, shower.36)\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nNone\n\n## Necessity to Use Actions\nNo\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_231_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| home_office.319 | Rooms | [] |\n| plate.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dish_soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_31_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| bedroom.67 | Rooms | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| dish_soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| bowl.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n| sponge.1002 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| dishrack.1003 | placable_objects | ['GRABBABLE', 'MOVABLE', 'SURFACES'] |\n| plate.1004 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n\n## Initial States\nINSIDE(character.65, bedroom.67)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_349_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| dish_soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n\n## Initial States\nCLEAN(faucet.232)\nOFF(faucet.232)\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_397_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| dish_soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_429_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| dish_soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_553_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| cupboard.229 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| home_office.319 | Rooms | [] |\n| plate.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE'] |\n| water.1002 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| food_kiwi.2007 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n| food_food.2009 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nCLEAN(cupboard.229)\nCLOSED(cupboard.229)\nONTOP(food_food.2009, plate.1000)\nINSIDE(character.65, home_office.319)\nONTOP(plate.1000, sink.231)\nONTOP(food_kiwi.2007, plate.1000)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_594_2",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| bathroom_counter.41 | Furniture | ['SURFACES'] |\n| sink.42 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| character.65 | Characters | [] |\n| dish_soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| plate.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n\n## Initial States\nONTOP(dish_soap.1000, sink.42)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_746_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| home_office.319 | Rooms | [] |\n| dish_soap.1000 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| water.1001 | placable_objects | ['DRINKABLE', 'POURABLE'] |\n| sponge.1002 | placable_objects | ['GRABBABLE', 'MOVABLE'] |\n| drinking_glass.1003 | placable_objects | ['GRABBABLE', 'MOVABLE', 'POURABLE', 'RECIPIENT'] |\n\n## Initial States\nINSIDE(character.65, home_office.319)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_961_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| bathroom.1 | Rooms | [] |\n| character.65 | Characters | [] |\n| dining_room.201 | Rooms | [] |\n| kitchen_counter.230 | Furniture | ['SURFACES'] |\n| sink.231 | Furniture | ['CONTAINERS', 'RECIPIENT'] |\n| plate.1000 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT', 'SURFACES'] |\n| dish_soap.1001 | placable_objects | ['CREAM', 'GRABBABLE', 'MOVABLE', 'POURABLE'] |\n| dishrack.1002 | placable_objects | ['GRABBABLE', 'MOVABLE', 'SURFACES'] |\n| food_kiwi.2003 | placable_objects | ['CUTTABLE', 'EATABLE', 'GRABBABLE', 'MOVABLE'] |\n\n## Initial States\nINSIDE(character.65, bathroom.1)\nONTOP(food_kiwi.2003, plate.1000)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    },
    {
        "identifier": "scene_1_988_1",
        "llm_prompt": "Now, it is time for you to generate the subgoal plan for the following task.\n# Target Task: Task category is Wash dishes by hand\n\n## Relevant Objects in the Scene\n| character.65 | Characters | [] |\n| cupboard.229 | Furniture | ['CAN_OPEN', 'CONTAINERS'] |\n| faucet.232 | Furniture | ['HAS_SWITCH'] |\n| bowl.1001 | placable_objects | ['GRABBABLE', 'MOVABLE', 'RECIPIENT'] |\n\n## Initial States\nCLEAN(faucet.232)\nOFF(faucet.232)\n\n## Goal States\n[States]\nNone\n[Actions Must Include]: Actions are listed in the execution order, each line is one action to satisfy. If \"A or B or ...\" is presented in one line, then only one of them needs to be satisfied.\nGRAB\nWASH or RINSE or SCRUB or WIPE\n\n## Necessity to Use Actions\nYes\n\n## Output: Based on initial states in this task, achieve final goal states logically and reasonably. It does not matter which state should be satisfied first, as long as all goal states can be satisfied at the end. Make sure your output follows the json format. Do not include irrelevant information, only output json object."
    }
]