[
    {
        "identifier": "27_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nbasket_for_clothes, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'EMPTY', 'FULL', 'GRABBED', 'OPEN']\nwashing_machine, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'BROKEN', 'CLOSED', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nclothes_jacket, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash clothes\n\nGoal description: Walk to the kitchen and find the basket of clothes. Put the soap and clothes into the washing machine. Turn on the washing machine.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "417_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nwashing_machine, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'BROKEN', 'CLOSED', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\nclothes_pants, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nclothes_pants, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nclothes_shirt, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nclothes_shirt, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash clothes\n\nGoal description: I will load the dirty clothes into the washing machine.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "850_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwashing_machine, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'BROKEN', 'CLOSED', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlaundry_detergent, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nclothes_pants, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash clothes\n\nGoal description: Walk into laundry room. Open washing machine door. Put dirty clothes into washing machine. Measure laundry detergent and place into washing machine. Turn dial to appropriate wash setting. Power on.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "954_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwashing_machine, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'BROKEN', 'CLOSED', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\nclothes_dress, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nclothes_pants, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nclothes_shirt, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nclothes_underwear, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash clothes\n\nGoal description: I need to get the dirty clothes basket.  Walk to bathroom.  Put all the clothes in washing machine.  Add soap.  Turn on machine.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "11_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: I go to bedroom and locate a lamp. This lamp can be turned on by touch, as it has capacitive sensing. So I do it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "120_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Go to the kitchen and living room and turn on the lights.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "125_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: turn on the light for room\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "150_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: push any ligth button to turn it on, for example in the living room\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "160_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncontroller, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ncontroller, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'GRABBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Go to the living room, find the switches (buttons or controllers) for light 1 and light 2 and switch on both the lights one by one.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "180_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: ['SITTING'], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Find the light circuit breaker in the kitchen\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "205_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Walk into the bedroom and walk to the light switch. Flip the switch.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "222_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: walk into living room, walk to light, turn on light switch.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "232_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: I need to turn on the lights in the kitchen so I can make dinner.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "310_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: I enter the bedroom and find the light. Then I turn it on.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "311_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: I go home and it's dark so I can not see anything\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "331_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: switching on light in an area\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "339_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: ['SITTING'], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Anything that has been identified as a room light should be turned from the off to the on position.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "345_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nfiling_cabinet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: We enter into the Living room and walk towards light switch. Then switch on the light.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "392_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: find lightswitch. walk to light switch. turn on light.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "394_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Find light switch. switch on\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "432_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Walk over to light switch, flip the switch to the on position\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "443_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Turning on lights\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "445_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Walk to living room, go to a light switch button, press button, confirm the light is on, go to next light switch button, press button, confirm the light is on\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "511_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Walk over to light switch. Turn on lights.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "585_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: I walk up to the light switch in the entrance hall and flick it on. Then I flick on the light switch in the living room, and switch on the floor lamp. Then I walk into the adjacent kitchen and switch on the lights there.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "604_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: for i = 1 to n, where n is the number of lights: locate light i, move to light i, switch on light i\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "616_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: flip the switch and turn on the lights\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "627_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfloor_lamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: walk to living room, find lamp, switch on.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "705_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Walk to the living room, walk to the lamp, switch on the lamp.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "708_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Go to the living room and turn on the lights\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "715_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: walk to wall, find light switch, turn on lights\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "737_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: I walk in to the living room. I find the light switch. I turn on the lights.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "780_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: Turn on the lights in the house\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "812_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: I walk in the bedroom and notice it is dark. I flip on the lamp switch so that the lights come on.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "835_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: I walk into the living room and then I walk to the light switch in there and turn the lights on\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "85_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: walk in kitchen. switch on light. walk in living room. switch on light.walk in entrance hall. switch on light.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "874_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Turn on light\n\nGoal description: I walk towards to the bedroom, and I open the door of the bedroom, and I switch on the lights inside the bedroom, the switch is beside the door.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "491_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntoothbrush, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntooth_paste, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'GRABBED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Brush teeth\n\nGoal description: go to the bathroom and brush your teeth\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "696_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntooth_paste, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'GRABBED', 'OPEN']\ntoothbrush, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Brush teeth\n\nGoal description: EARLY MORNING AND BEFORE GOING TO BED\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1003_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwalllamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'ON']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: go to the home office and write an email\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "115_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: go to home office,switch on computer and send the mail by typing with keyboard\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "407_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\naddress_book, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'GRABBED', 'OPEN']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: Walk to Home office. Sit on the chair. Switch on the computer. Find address in addressbook. Type in the keyboard. Write mail.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "430_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: I need to send an email to my friend so I go into my office and sit down at the desk. I turn on the computer and type the email.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "481_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nmail, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'GRABBED', 'OPEN']\nbutton, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: Switch on computer, Use keybord and mouse to open e-mail provider, type requested e-mail, click send, close e-mail provider, turn off computer\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "622_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: Walk to the office, sit down on chair, attach keyboard to the computer, attach mouse to the computer, switch the computer on, type the email on the keyboard\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "699_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nmail, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'GRABBED', 'OPEN']\ncheck, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'FULL', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: I wrote the task completion in a Notebook. After completing the work, I send email to my Superior. I done this task in day to day activity.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "824_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: I go to my office and sit at my desk. Turn on the computer and type my email at the keyboard.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "87_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nlaptop, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: walk to home office and switch on laptop and with the useof mouse and keyboard send mail\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "986_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: I walk to the Home Office then find the computer and sit in the chair. I switch on the computer and start typing the email. I switch the computer off.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "996_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Write an email\n\nGoal description: I go to my bed room and sit on the chair and in front of me is my desktop computer and start writing an email.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1004_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfood_food, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Put groceries in Fridge\n\nGoal description: walk to kitchen, walk to fridge, look at bags, grab groceries, put groceries in fridge.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "152_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfood_food, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Put groceries in Fridge\n\nGoal description: take every item from groceries bag and put them in the fridge\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "298_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfood_food, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Put groceries in Fridge\n\nGoal description: I leave the bags with groceries near the fridge, open the door and put the groceries in the shelves.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "609_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfood_food, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Put groceries in Fridge\n\nGoal description: go to the kitchen and put the groceries in the fridge\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "703_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfood_food, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Put groceries in Fridge\n\nGoal description: walk to kitchen and seprate the groceries and arrange in fridge.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "772_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nmilk, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'COLD', 'EMPTY', 'FULL', 'GRABBED', 'HOT', 'OPEN', 'ROTTEN']\nfood_turkey, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'COOKED', 'FROZEN', 'GRABBED', 'HOT', 'UNCOOKED']\nfood_egg, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'COLD', 'COOKED', 'GRABBED', 'HOT', 'ROTTEN', 'UNCOOKED']\nfood_egg, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'COLD', 'COOKED', 'GRABBED', 'HOT', 'ROTTEN', 'UNCOOKED']\nfood_egg, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'COLD', 'COOKED', 'GRABBED', 'HOT', 'ROTTEN', 'UNCOOKED']\nfood_fish, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'COOKED', 'FROZEN', 'GRABBED', 'HOT', 'PEELED', 'ROTTEN', 'UNCOOKED']\nfood_chicken, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'COOKED', 'CUT', 'FULL', 'GRABBED', 'HOT', 'UNCOOKED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Put groceries in Fridge\n\nGoal description: Walk to kitchen. Open fridge. Put milk in fridge. Put turkey in fridge. Put eggs in fridge. Put fish in fridge. Put chicken in fridge.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "837_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ncolander, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'GRABBED', 'WET']\nfood_food, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncoffe_maker, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'OCCUPIED', 'OFF', 'ON', 'OPEN']\ntoaster, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'DIRTY', 'OFF', 'ON', 'PLUGGED_IN', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED', 'OFF', 'ON']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nfood_cheese, initial states: ['CLEAN'], possible states: ['CLEAN', 'COLD', 'COOKED', 'CUT', 'FULL', 'GRABBED', 'HOT', 'ROTTEN', 'UNCOOKED']\nmilk, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'COLD', 'EMPTY', 'FULL', 'GRABBED', 'HOT', 'OPEN', 'ROTTEN']\nfood_vegetable, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'COOKED', 'CUT', 'EATABLE', 'FROZEN', 'FULL', 'GRABBED', 'HOT', 'PEELED', 'ROTTEN', 'UNCOOKED']\nfood_egg, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'COLD', 'COOKED', 'GRABBED', 'HOT', 'ROTTEN', 'UNCOOKED']\nmicrowave, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OFF', 'ON', 'OPEN']\nfood_food, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Put groceries in Fridge\n\nGoal description: I find the groceries and carry them into the kitchen. I place them on the counter and begin to sort them out. I place the vegetables, eggs, cheese, and milk in the fridge.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "158_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: ['SITTING'], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntoilet, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FLUSHED', 'FREE', 'OCCUPIED', 'OPEN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to toilet\n\nGoal description: The person will stand , walk to the bathroom, and this case look at the toilet in the bathroom as no other action was requested\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "323_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntoilet, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FLUSHED', 'FREE', 'OCCUPIED', 'OPEN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to toilet\n\nGoal description: Walk to the bathroom.  Find the toilet.  Lift the top of the toilet.  Sit on the toilet.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "430_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntoilet, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FLUSHED', 'FREE', 'OCCUPIED', 'OPEN']\ntoilet_paper, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'CUT', 'DIRTY', 'DRY', 'FULL', 'GRABBED', 'WET']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nbathroom_counter, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to toilet\n\nGoal description: When I need to use the restroom I walk to the bathroom, sit on the toilet, do my business, wipe with toilet paper, stand up and flush. Then wash my hands.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "478_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntoilet, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FLUSHED', 'FREE', 'OCCUPIED', 'OPEN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to toilet\n\nGoal description: I walk into the bath room and go to the toilet\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "496_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntoilet, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FLUSHED', 'FREE', 'OCCUPIED', 'OPEN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to toilet\n\nGoal description: I walk to the entrance of the bathroom. I turn to the door. I open the door to the bathroom. I walk inside of the bathroom. I find the toilet inside of the bathroom and walk over to it. I turn and look at the toilet.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "624_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ntoilet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FLUSHED', 'FREE', 'OCCUPIED', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndresser, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\ntoilet_paper, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'CUT', 'DIRTY', 'DRY', 'FULL', 'GRABBED', 'WET']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to toilet\n\nGoal description: I go to the bathroom open the door and close it, then i sit on the toilet.... I use toilet paper, wash my hands and open the door to exit.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "188_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Change TV channel\n\nGoal description: its time for my favorite show and im going change with the help of remote control and watch\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "803_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Change TV channel\n\nGoal description: I walk in living room. I find TV remote. I grab TV remote. I sit on sofa. I switch on TV. I switch channel.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "960_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Change TV channel\n\nGoal description: change tv channel with the remote, then watch the tv\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "101_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Go to office, sit at desk, turn on computer, enter password, open application and begin work\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1068_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: walk to home office ,find computer ,switch on computer and work\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "153_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: turn computer on, open application to work with\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "196_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Walk to over to desk, sit down on chair and face the computer, turn the computer on, use arms to place hands on the keyboard, type work into the computer and use eyes to review.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "198_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Sit down on chair in front of computer, turn on computer, find mouse.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "201_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Type on a computer in the home office.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "232_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I need to complete work on my computer, so I will be pulling out my chair, turning on my computer and begin my task.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "234_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I walk into the home office and to the computer to switch it on. I sit in the chair and operate the computer with the keyboard and mouse.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "343_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\nbookshelf, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Find Computer. Switch on computer.Sit on the chair.grab key board.type keyboard. click mouse.look at  computer.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "373_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: go to home office. turn the computer on. begin working\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "406_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Find Computer and in the chair in from of him. Switch on the computer and look at it and work, tying text with the keyboard when needed.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "409_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Walk to home office. Sit on chair. Switch on computer. type in keyboard.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "419_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nhair, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Walk to home office, walk to desk, sit in chair, turn on computer, look at computer, click mouse and type on keyboard.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "433_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Using a computer\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "437_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nhair, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I walk into the office. I see my computer sitting on the desk. I walk over to the desk and sit down. I turn on the computer. I begin to use the keys and  mouse on the mousepad to work on the computer.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "440_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nmouse, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I walk into the office where I see my computer on the desk. I go to sit down and turn on computer. I begin typing.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "453_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I walk to the office. I sit down in the chair. I turn on the computer. I start typing on the keyboard.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "46_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Using desktop computer in home office\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "475_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I walk into home office. I walk to desk. I sit at chair. I turn on computer.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "503_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Work on the computer\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "670_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwalllamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'ON']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I need to finish some work on my computer in my home office to meet a deadline for tomorrow.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "719_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Go into the office and sit down at the desk in front of the computer. Turn on the computer and look at it while clicking with the mouse and typing with the keyboard.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "757_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Find the computer. Turn it on by pressing the on button. Wait for it to load. Use the mouse and keyboard to perform your tasks on screen.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "787_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I walk to the office. I find the copmputer. I turn on the computer. I find the chair. I sit down. I find the keyboard and mouse. I type on the keyboard.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "795_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I walk to the bedroom, then find the computer and sit in the chair ,next switch on the computer and finally type in the keyboard to start to work on it\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "819_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I go in the office, sit at my desk, then turn on the computer.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "874_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I walk to the home office. I open the door of the office room and sit on the chair and in front of me is my desktop computer,  and I switch on the computer.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "910_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: Work on computer\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "91_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I go to my home office, sit on the chair and turn on the computer. I open my email account to look for all the information I need.I pull up my online task on the computer to look at what the assigned task is.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "93_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\ncheck, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'FULL', 'GRABBED']\nhomework, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: walk to Office,Walk to desk ,sit down in chair, turn on computer, start homework.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "962_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbutton, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Work\n\nGoal description: I walk to the living room. I find the computer and turn it on. I look at the computer screen. I move and click the mouse to select buttons on the screen.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "190_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nbowl, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: Put dishes in the dishwasher and start the dishwasher.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "201_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: Wash a plate using the dishwasher in the kitchen.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "223_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: walk into kitchen, find dishwasher, put plates in dishwasher, put soap in dishwasher, turn on dishwasher\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "327_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncoffe_maker, initial states: ['OPEN', 'OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'OCCUPIED', 'OFF', 'ON', 'OPEN']\ntoaster, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'DIRTY', 'OFF', 'ON', 'PLUGGED_IN', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED', 'OFF', 'ON']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nfaucet, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nmicrowave, initial states: ['DIRTY', 'OFF', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OFF', 'ON', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfood_jam, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'COLD', 'GRABBED', 'OPEN', 'WARM']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: I walk into the kitchen and go to the dishwasher. I open the dishwasher and grab the dishes. Iplace the dishes into the dishwasher then close it. I add soap then turn the dishwasher on.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "383_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfood_food, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: Walk to the  kitchen. Open the dishwasher. Put plates into the dishwasher. Put dish soap into the dishwasher. Close the dishwasher. Turn on the dishwasher.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "417_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\ndrinking_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndrinking_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nfork, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: I will load the dishes into the dishwasher and start it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "487_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\nfork, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nspoon, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'GRABBED', 'WET']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: Collect dishes. Place them in the dishwasher. Load detergent. Turn on dishwasher.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "650_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\npot, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'COLD', 'DIRTY', 'GRABBED', 'HOT', 'OPEN']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: Put the dishes on dinner table in the dishwasher and wash them\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "783_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: I go to the kitchen and open the dishwasher. I fill it up with dirty dishes and glasses. Then I put dish soap in the dishwasher, close it and turn it on.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "815_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: I go the in kitchen then grab the plate on the table. I put the plate and dish soap in the dishwasher. Finally, I turn on the dishwasher.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "826_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\nfork, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nfork, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nknife, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FREE', 'GRABBED', 'OCCUPIED', 'SHARPENED', 'UNSHARPENED', 'WET']\nknife, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FREE', 'GRABBED', 'OCCUPIED', 'SHARPENED', 'UNSHARPENED', 'WET']\nspoon, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'GRABBED', 'WET']\nspoon, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'GRABBED', 'WET']\nspoon, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'GRABBED', 'WET']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: Go to kitchen, open dishwasher, load dishwasher and put in dish soap. Close dishwasher and start.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "856_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: Walk to the kitchen. Open the dishwasher. Grab plate and put it in the dishwasher. Grab dish soap and put it in the dishwasher. Switch on the dishwasher.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "911_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndishwasher, initial states: ['OFF', 'CLOSED', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'BROKEN', 'EMPTY', 'FULL', 'OFF', 'ON', 'OPEN']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes with dishwasher\n\nGoal description: I open the dishwasher, I inser all dishes I find in the kitchen, I find a dishwasher tab and insert it into the dishwasher, then I close the dishwasher and start the process\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1027_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nbed, initial states: ['CLEAN'], possible states: ['CLEAN', 'DONE', 'FREE', 'OCCUPIED', 'UNDONE']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to sleep\n\nGoal description: Walk to bedroom, walk to bed, lay down on bed, close eyes, go to sleep.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "181_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbed, initial states: ['CLEAN'], possible states: ['CLEAN', 'DONE', 'FREE', 'OCCUPIED', 'UNDONE']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to sleep\n\nGoal description: go to bedroom, lie on Bed, sleep\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "244_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nbed, initial states: ['CLEAN'], possible states: ['CLEAN', 'DONE', 'FREE', 'OCCUPIED', 'UNDONE']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to sleep\n\nGoal description: I walk to my room, walk to my bed, lie in my bed, and go to sleep.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "269_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbed, initial states: ['CLEAN'], possible states: ['CLEAN', 'DONE', 'FREE', 'OCCUPIED', 'UNDONE']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to sleep\n\nGoal description: Walk to the bedroom.  Find the bed.  Lie down on the bed.  Close your eyes.  Wait.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "509_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nclothes_pants, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nclothes_shirt, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nclothes_shirt, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nclothes_pants, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'FREE', 'GRABBED', 'OCCUPIED', 'UNFOLDED']\nbed, initial states: ['CLEAN'], possible states: ['CLEAN', 'DONE', 'FREE', 'OCCUPIED', 'UNDONE']\nsheets, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'GRABBED', 'UNFOLDED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to sleep\n\nGoal description: I walk into my bedroom. I change out of my clothing into pajamas. I turn off the light. I lie down in my bed and pull my sheets over me. I go to sleep.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "875_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwindow, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ntablelamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'ON']\ntablelamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'ON']\nnightstand, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'BROKEN', 'CLOSED', 'OPEN']\nnightstand, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'BROKEN', 'CLOSED', 'OPEN']\nbed, initial states: ['CLEAN'], possible states: ['CLEAN', 'DONE', 'FREE', 'OCCUPIED', 'UNDONE']\nmat, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'GRABBED', 'UNFOLDED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ncurtain, initial states: ['DIRTY', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ncurtain, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ncurtain, initial states: ['DIRTY', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\npillow, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\npillow, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Go to sleep\n\nGoal description: walk to bedroom, look at the pillow, put pillow into bed, lie down in bed, sleep well\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "102_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nbathroom_counter, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: I go to the bathroom, walk to the sink, turn on the faucet and then wash my hands under the water.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "154_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntowel, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FOLDED', 'GRABBED', 'UNFOLDED', 'WET']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nbathroom_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: I go to the sink, turn on the water,  put soap on my hands, rub them together, then rinse them off and turn off the water. I then towel off my hands.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "176_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nbathroom_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Apply soap in hand over sink.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "214_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nbathroom_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: walk to bathroom, find sink, turn on faucet, put soap in hands, wash and rinse hands,\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "258_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: walk to kitchen, turn on water, find soap, apply to hand, lather, rinse, dry hands\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "499_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\npaper_towel, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY', 'DRY', 'EMPTY', 'GRABBED', 'WET']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nbathroom_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: I walk into the bathroom. I turn on the water. I put soap on my hands. I rinse my hands. I turn off the water. I dry my hands.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "517_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nbathroom_counter, initial states: ['DIRTY', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Go to the bathroom. turn on the water in the sink. apply soap to hands. rub hands together. rinse hands with water. turn off the water.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "549_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Go to the sink. Turn on the water, wash hands with soap. turn off the sink.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "562_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: I turn on faucet. I hold out my hands. I get my hands wet.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "580_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ntowel, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FOLDED', 'GRABBED', 'UNFOLDED', 'WET']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nbathroom_counter, initial states: ['DIRTY', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: I go to the bathroom and locate the sink. I turn the faucet so that water is running, and rinse my hands briefly. Then I grab the soap and squeeze some onto my hands. I spend a few minutes rubbing my hands together, then I rinse them again. Finally, I turn the faucet off and wipe my hands on a towel.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "657_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\ntowel, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FOLDED', 'GRABBED', 'UNFOLDED', 'WET']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Go to bathroom, turn on faucet, wet hands, apply soap, rub hands, rinse hands, turn off faucet, dry hands\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "660_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nbathroom_counter, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Go to the bathroom and to the sink, turn the faucet on, push the bottle of soap onto your hands and scrub them. Then rinse your hands out and turn the faucet off.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "672_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\ntowel, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FOLDED', 'GRABBED', 'UNFOLDED', 'WET']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: I go to the bathroom, open the faucet rinse the hands, wash the hands with soap and rinse again, then wipe with a towel.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "710_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nbathroom_counter, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Walk to bathroom. Walk to sink and turn on the water. Grab the soap and wash the hands.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "741_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: I walk in to the bathroom. I find the soap. I find the faucet. I turn on the faucet. I wash my hands. I put the soap back. I rinse my hands. I turn the faucet off.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "750_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ntowel, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FOLDED', 'GRABBED', 'UNFOLDED', 'WET']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nbathroom_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Go into the bathroom and go over to the sink. Grab soap and turn on the water. Wet your hands and rub them together so that the soap lathers. Rub the soap all over your hands thoroughly. Rinse off the soap with water and turn off the sink. Dry your hands with a towel.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "805_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\ntowel, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FOLDED', 'GRABBED', 'UNFOLDED', 'WET']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nbathroom_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: I walk into the bathroom. Walk to the sink. Turn on tap. Get soap. Wash and rinse hands. Turn off tap. Dry hands.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "80_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nbathroom_counter, initial states: ['DIRTY', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Walk to the sink, turn on the faucet, put soap on hands, rub hands together under the water, rinse off hands, turn off faucet, dry hands\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "813_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: walk to bathroom, look at the water, wash hands\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "928_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\nbathroom_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Going to the sink and scrubbing hands\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "995_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nhands_both, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash hands\n\nGoal description: Wash Hands\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1035_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: Find the cat. Touch the cat with your hands.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "113_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: I find cat. I touch cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "12_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: You walk to the living room and find the cat. You look at the cat and touch it to pet it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "137_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: stimulate a feline tactily\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "203_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\nhair, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: Petting the cat\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "220_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: First I need to find the cat in the living room. Then I walk over to the cat and pet it gently.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "242_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: Find the cat; pet the cat by touching it\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "279_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: Find the cat.  Pet the cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "287_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: Locate the cat.  Move close to the cat.  Extend arm toward cat.  Gently pet the cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "292_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: I would walk into the living room. Then sit on the couch and pet the cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "297_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: The cat is laying on the couch in the living room. I want to pet it, so I am going to walk to the living room, sit on the couch, and pet the cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "381_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: Walk into the living room. Walk up to the cat. Pet the cat with your hand.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "388_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: Find cat. Walk to cat. Pick up cat. Pet the cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "38_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nface, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY', 'SHAVED', 'UNSHAVED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: I look for my cat and start petting it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "429_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: I see my cat on the couch so I walk over, sit down and pet the cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "437_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhair, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: I walk into the living room. I see my cat on the couch. I go sit next to the cat on the couch. I pet the cat on the back.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "451_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: I walk to the living room. I find the cat. I pet the cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "469_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: I sit next to the cat. I hold out my hand. I put my hand on the cat. I pet the cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "479_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: I walk into the living room and I pet the cat\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "502_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: Pick up cat. Rub hand on cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "612_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: I enter the room where the cat is. I look for the cat. I find the cat. I walk over to the cat. I use my hand to pet the cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "856_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncat, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'PLEASED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pet cat\n\nGoal description: Walk into bedrrom and to the sofa. Sit on the sofa and touch cat.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "384_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwalllamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'ON']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Browse internet\n\nGoal description: I will walk to the computer at the desk in my home office, sit in the chair, turn on the computer, open a web browser, type in the address, and view the computer.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "540_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Browse internet\n\nGoal description: I pick up my phone. I touch it to navigate to the web browser. I can swipe and tap the screen to visit different websites. Then I read or watch the content within those websites.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "60_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwalllamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'ON']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nlaptop, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Browse internet\n\nGoal description: first ill go to the entrance hall ill enter into my home office after that i will switch on mylaptop and then with the use of mouse and keyboard i will browse\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "71_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwalllamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'ON']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['DIRTY'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Browse internet\n\nGoal description: Go to home office and browse the internet.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "7_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Browse internet\n\nGoal description: I go to the office and sit in a chair, I turn on the computer and grab the mouse. I type on the keyboard and starting working on the computer.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1070_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntoothbrush_holder, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ntoothbrush, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\ntooth_paste, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'GRABBED', 'OPEN']\nteeth, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash teeth\n\nGoal description: walk to bathroom, look at the toothbrush holder, grab the toothbrush from the toothbrush holder, find the toothpaste, squeeze the toothpaste into toothbrush, now wash the teeth\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "313_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntooth_paste, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'GRABBED', 'OPEN']\ntoothbrush, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntowel, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FOLDED', 'GRABBED', 'UNFOLDED', 'WET']\nteeth, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nbathroom_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash teeth\n\nGoal description: I go to sleep and i eat the dinner so i have to clean my mouth\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "689_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntoothbrush_holder, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ntooth_paste, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'GRABBED', 'OPEN']\ntoothbrush, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash teeth\n\nGoal description: WALK TO THE BATHROOM USE PASTE AND BRUSH TO WASH YOUR TEETH\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "718_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntooth_paste, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'GRABBED', 'OPEN']\ntoothbrush, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash teeth\n\nGoal description: before going to bed or when wake up earily morning brush teeth\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1049_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndvd_player, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'CLOSED', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: walk to living room, look at the DVD player, switch on the dvd player, look at the sofa, sit on the sofa and listen the music\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "113_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncd_player, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'CLEAN', 'CLOSED', 'DIRTY', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: I find CD player. I turn on CD player. I press play.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "161_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: turn radio on, listen to music\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "173_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: ['SITTING'], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncd_player, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'CLEAN', 'CLOSED', 'DIRTY', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\nheadset, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'GRABBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: Find player and switch on to headphones\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "23_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: I walk into the living room. I find the stereo and turn it on, and I listen to the music.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "263_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: Find radio, turn it on\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "305_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: I go to the bedroom and sit at my desk. I turn my radio on and listen to music.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "363_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nmusic_stand, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'FOLDED', 'FREE', 'OCCUPIED', 'OPEN', 'UNFOLDED']\ndvd_player, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'CLOSED', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: Walking to Living room. Grab the music player. Switch on player. Put CD into the player. Sit the chair and Listening music\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "385_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncd_player, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'CLEAN', 'CLOSED', 'DIRTY', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: Go to living room. Find CD player. Pick CD. Put CD in CD player. Play music.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "403_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: I walk into my room and turn the radio on so that I can listen to music.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "415_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nheadset, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'GRABBED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: Find telephone and grab it. Find headset and put on your head. Connect it to the telephone. Look at your telephone and listen to music.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "462_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\nheadset, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: I walk to my bedroom.  I locate my stereo and turn it on.  I put on my headphones and sit to listen.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "463_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: I walk into the bedroom. I walk to stereo. I turn on stereo.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "503_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncd_player, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'CLEAN', 'CLOSED', 'DIRTY', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: Walk to CD player and turn it on then go and sit in a chair and turn the remote control on and then listen to some music.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "59_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nheadset, initial states: ['CLEAN'], possible states: ['CLEAN', 'BROKEN', 'GRABBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: walk to living room. grab cellphone. grab headset. put on headset. type with cellphone.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "737_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: I find a radio. I turn on the radio. I listen to music.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "773_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: Find radio. Turn on radio. Find a station that you like by switching through the channels. Listen.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "910_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: Listen to music\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "953_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nmusic_stand, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'FOLDED', 'FREE', 'OCCUPIED', 'OPEN', 'UNFOLDED']\ncd_player, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'CLEAN', 'CLOSED', 'DIRTY', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Listen to music\n\nGoal description: Walk to the living and turn to the music stand. Switch on the CD player to listen to music.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1057_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Go to the living room, sit on the couch, find the remote, switch on the TV and watch\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "117_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Go to the living room. Find the remote. Pick up the remote. Find the sofa. Sit on the sofa. Look at the television. Aim the remote at the television. Press the power button. Flip the channels.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "134_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: watching TV from sofa\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "170_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: find the TV remote, Use the remote to turn on the TV, sit on the couch, watch te\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "197_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\nelectrical_outlet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: i will walk into living room and the i will first take the remote control switch on tv after that i will watch all my favorite shows\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "21_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: I go to living room, sit on sofa, find the remote control on the table, switch on TV and watch the TV.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "225_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncoffee_table, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Sit down, turn on the TV with the remote control that is on the coffee table.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "259_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: ['SITTING'], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: stand up, walk to living room, find remote control, grab remote control, find couch, walk to couch, sit in couch, find television, lift remote control, switch on television, look at television\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "307_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: I go into the living room. I find the remote. I turn on the tv. I sit on the couch and watch tv.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "329_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Walk to living room, walk to TV, grab TV remote, turn on TV, put down the remote, walk to sofa, sit in soft, watch TV\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "342_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Turn on the TV, sit on the couch, find a show, and watch it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "377_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Walk into the living room/den. Turn on the television. Switch channels to find a program with remote. I find a program and look at the screen.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "383_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Walk into the living room. Sit down on the sofa. Pick up the remote control. Turn on the television with the remote control. Put down the remote control. Watch the television.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "411_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Walk to Living room. Find Television. Walk to sofa. Sit on sofa. Find Remote. Grab remote. Turn to television. Look at television. Switch on Television.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "454_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Walk to the living room. Sit on the sofa. Grab the remote and turn on the television.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "459_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: I walk into the living room. I sit on the couch. I pick up the remote control. I push the power button.  I push the guide button and look for my favorite show \"The Middle.\"  I click that channel and enjoy my show.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "548_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: go to living room.Turn on TV with remote. Watch TV.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "595_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ncoffee_table, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: I walk into the living room and sit on the couch. I pick up the remote to turn on the television. I put down the remote on the coffee table and look at the television.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "684_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: walk into the living room walk to the remote pick it up and turn in the tv and watch\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "74_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Enter the living room, find TV remote, grab TV remote, switch on TV, find sofa, sit down on the sofa, watch TV\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "806_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: I will enter the room with the TV and walk to a remote. I'll pick up the remote and walk to a nearby couch or chair. I'll sit in the couch and use the remote to turn on the TV. I'll then select a channel to watch.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "98_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Watch TV\n\nGoal description: Watching TV\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1064_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: Drink water\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "156_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: Drink water from a cup\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "171_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncupboard, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\nkitchen_counter, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: Go to the kitchen, grab a cup from the cupboard, go to the sink, put cup under faucet, turn on faucet til cup is full, turn off faucet, drink from cup\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "175_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: To go kitchen and find a cup. open the faucet and fill water in the cup and drink.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "181_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: go to kitchen, find water glass and grab it, find fridge and open grab water and pour into it, then drink.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "26_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: ['SITTING'], possible states: ['LYING', 'SITTING']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I go to the kitchen, I pour water into a glass, I go back to the living room, sit down, and drink it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "286_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncupboard, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I enter the kitchen and grab a waterglass from the cupboard. I open the fridge and grap some water. I pour the water into the cup and drink it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "291_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: GOING TO DRINK WATER IN KITCHEN\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "317_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nkitchen_cabinet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I walk the kitchen and walk up to the kitchen cabinet. I open the cabinet and take out a cup. I walk to sink and I turn the faucet on using the cold water handle. I put my cup under the running water until it is full. I turn off the cold water handle and bring the cup to my mouth and take a drink.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "488_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: Walk to kitchen, grab a glass, walk to sink, turn on tap and pour water into glass, drink from glass.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "510_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ndrinking_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I walk to the kitchen. Take a glass out of the cabinet. Then I walk to the sink and turn the water on and fill the glass. Then I take a drink.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "528_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndrinking_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: go to the kitchen\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "532_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nkitchen_cabinet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ndrinking_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I walk to the kitchen and open the cabinet containing the drinking glasses. I grab a drinking glass and close the cabinet. I bring the glass to the sink and turn on the faucet to cold. I move the glass under the stream of water and keep it there until the glass is 80% full of water. I move the glass away from the stream of water and shut off the faucet. I bring the cup to my mouth and drink the water.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "589_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I go to the kitchen. I get a glass. I fill it with water. I take a drink from the glass.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "600_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: walk to kitchen ,find fridge ,open fridge ,find water  glass , drink from water glass\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "662_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: Walk to kitchen. Find water glass. Grab water glass. Find water. Pour water in water glass. Drink water from water glass.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "688_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncupboard, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I am thirsty and need to drink some water. Unfortunately, I am out of water bottles so I must get some tap water from the sink.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "787_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nkitchen_counter, initial states: ['DIRTY', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I walk to the kitchen. I find a cup. I pick up the cup. I find the water faucet. I turn on the water faucet. I fill the cup. I turn off the water faucet. I drink the water.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "788_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nkitchen_cabinet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ndrinking_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I go to the kitchen to get a glass from the cabinet. I turn on the faucet and fill up the glass. I take a drink.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "814_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncupboard, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I walk to the kitchen. open the cupboard. Find the water glass, grab it. Fill the glass with water and drink water.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "850_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\nkitchen_cabinet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I walk into the kitchen. I reach into the cabinet and pick up a water glass. Turn on the faucet and place the glass under the water stream. Bring the glass of water to lips and drink.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "861_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nkitchen_counter, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I go in the kitchen and get the glass near the sink. I open the faucet, then I pour water in it, turn off the faucet and drink it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "878_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncupboard, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Drink\n\nGoal description: I need to go to Kitchen.  Get a cup.  Fill cup.  Drink\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1073_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Walk to home office, turn on light, grab a book, sit in chair, start to read the book\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1088_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nfiling_cabinet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: I go to the book case, I select a book, I go back and sit down, then I read.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "15_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\naddress_book, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'GRABBED', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Open coffee maker. Put filter in main basket, put ground coffee in filter, fill reservoir with water, turn on coffee maker.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "163_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Take a book, open it and read it\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "16_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ncoffee_table, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: I walk to the living room and pick up a book from the coffee table. I find my favorite chair.  I sit in the armchair and open the book.  I read.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "192_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Take a book from the shelf, sit on sofa and start reading.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "208_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nfloor_lamp, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Turn a light on and read a book in the bedroom.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "221_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: I open up my book to where my bookmark is, and then i begin reading to the end of the page. Then I turn the page and read to the end of the next and so on.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "241_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ncharacter, initial states: ['SITTING'], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Find book. Pick up book. Open book. Read the book.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "341_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncupboard, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ncoffee_table, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nspectacles, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: I finish of washes dishes, go to the living room, pick my book and read a while\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "484_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncomputer, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: I walk into the living room. I pick up a book. I sit down in a chair and read the book.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "504_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: I find my favorite book then I sit down open the book and begin reading it\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "508_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: go to bedroom, sit down, pick up book, read\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "544_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: pick up your book and read it\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "57_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Walk to the couch in the living room, sit on ti and read the book\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "617_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntablelamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'ON']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nnightstand, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'BROKEN', 'CLOSED', 'OPEN']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nbed, initial states: ['CLEAN'], possible states: ['CLEAN', 'DONE', 'FREE', 'OCCUPIED', 'UNDONE']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Go to the bedroom. Grab the book out of the nightstand. Lay down in bed. Open the book. Read the book.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "628_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: I go to the living room, take a book from the shelf, sit in the sofa and read the book\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "688_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nspectacles, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: I want to read a book in my living room, but must first put my reading glasses on and turn the light by the couch on so I can see what I am reading.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "693_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Go to bedroom, find a book I like, pull out a chair, sit in it and open the book to read\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "821_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: I walk to home office and search for a book, and sit to the chair with a table, and start reading.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "86_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nfiling_cabinet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Walk to the Living Room. Look at the Cabinet. Find a Textbook. Grab the textbook. Open the Textbook. Read the textbook.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "896_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nbookmark, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'OCCUPIED']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nmouse, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: Find book, grab book, fin bookmark, sit down somewhere comfortable, open book, read book, close book after reading.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "897_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Read book\n\nGoal description: walk to home office, look at the light switch board, switch on the light, find the book, grap the book, sit in the chair, put the book into table, open the book, now read the book\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "1083_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\noven, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLOSED', 'COLD', 'HOT', 'OFF', 'ON', 'OPEN']\npot, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'COLD', 'DIRTY', 'GRABBED', 'HOT', 'OPEN']\nfood_vegetable, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'COOKED', 'CUT', 'EATABLE', 'FROZEN', 'FULL', 'GRABBED', 'HOT', 'PEELED', 'ROTTEN', 'UNCOOKED']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\npot, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'COLD', 'DIRTY', 'GRABBED', 'HOT', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Cook some food\n\nGoal description: walk to kicthen , find stove , find cooking pot , find vegetables , find water  ,put vegetables in cooking pot, pour water to cooking pot,put cooking pot on stove, switch on stove\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "392_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfreezer, initial states: ['CLEAN', 'CLOSED', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLEAN', 'CLOSED', 'DIRTY', 'OFF', 'ON', 'OPEN']\npot, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'COLD', 'DIRTY', 'GRABBED', 'HOT', 'OPEN']\noven, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLOSED', 'COLD', 'HOT', 'OFF', 'ON', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Cook some food\n\nGoal description: find fridge. walk to fridge. open fridge. find food. grab food. close fridge door. find frying pan. walk to frying pan. grab frying pan. find stove. walk to stove. put frying pan on stove. put food in frying pan. switch on stove.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "755_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\noven, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'CLOSED', 'COLD', 'HOT', 'OFF', 'ON', 'OPEN']\nkitchen_cabinet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nsauce_pan, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'GRABBED', 'HOT']\npasta, initial states: ['CLEAN'], possible states: ['CLEAN', 'COLD', 'COOKED', 'GRABBED', 'HOT', 'UNCOOKED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Cook some food\n\nGoal description: Cook some pasta on the stove\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "124_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: go to the living room,find the sofa,sat down in the sofa,take some relaxation.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "137_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: allow sofa to support weight in order to decrease gravity induced entropy\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "204_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncoffee, initial states: ['CLEAN'], possible states: ['CLEAN', 'COLD', 'GRABBED', 'HOT']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: im feeling so tired so i wanted to go to my living room and relax on my sofa and i love drinking coffee while relaxing and some good shows in television\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "268_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I walk into the living room and turn on the light. I walk to the couch then sit on the couch.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "297_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nmat, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'GRABBED', 'UNFOLDED']\npillow, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\ncurtain, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nwindow, initial states: ['DIRTY'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\nfloor_lamp, initial states: ['ON', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I am feeling tired, so I am going to go turn off the lamp, grab the pillow off of the chair, put it on the couch, and lie down to sleep.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "299_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: walk to living room, walk to sofa, sit in sofa, relax\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "300_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Go to living room.  Find sofa.  Sit on sofa.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "321_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nwater_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Drink a glass of water in the sofa\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "332_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I walk into the living room. I cross the room to the couch. I sit down and relax.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "379_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: go to living room and lie down on the sofa.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "387_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Walk to living room. Find couch. Sit on couch\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "390_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Walk into the living room. Walk up to the sofa. Sit down on the sofa.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "3_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I go to the living room and sit in the sofa\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "416_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I am going to lay on the sofa and relax.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "438_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: go to the living room and sit on the couch, ease into the sofa and relax.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "442_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Find the sofa and sit on it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "447_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncoffee_cup, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nnovel, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'GRABBED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: you walk to the living room, open the door, find a comfy sofa, sit on it, read a book or sip a cup of coffee and relax.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "449_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nremote_control, initial states: ['CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'GRABBED', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Go into the living room. Walk over to the sofa. Lie down on the sofa. Turn on and watch TV.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "455_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I walk to the living room and find the sofa. I sit on the sofa and get comfortable.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "456_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I walk to the living room. I see the couch.  I sit down on the couch, then lie down and put my feet up.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "473_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nsheets, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'GRABBED', 'UNFOLDED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Find the sofa. Sit on it. Pick the blanket on the sofa and put on yourself. Relax.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "490_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: walk to living room, walk to sofa, sit in sofa\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "563_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I walk to the sofa, and lie down on the sofa.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "567_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nstereo, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'GRABBED', 'OFF', 'ON', 'OPEN', 'PLUGGED', 'UNPLUGGED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nlight, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I want to relax on the sofa to some relaxing music in the living room.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "570_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I walk into the living room. I bend down. I sit on the sofa.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "674_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Walk into the living room. Walk to the sofa and sit on it. Put your feet up on the sofa and lay down.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "6_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I turn on the tv and sit in the sofa. I watch the tv and fall asleep.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "742_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I walk to the living room. I sit in the sofa and I relax.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "762_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Walk to the living room. Find the sofa. Walk to the sofa. Lie in the sofa.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "793_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I walk to my living room and switch on the television, and lay on the sofa.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "798_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Sitting down and relaxing on the sofa\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "932_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: walk to living room, find sofa, sit in sofa\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "941_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Open coffee maker. Put filter in main basket, put ground coffee in filter, fill reservoir with water, turn on coffee maker.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "96_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: Relax\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "976_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Relax on sofa\n\nGoal description: I go in the living room sit on the sofa and relax.I then I sleep on the sofa because I am so relaxed.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "149_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: ['SITTING'], possible states: ['LYING', 'SITTING']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nfood_food, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: stand up, walk to Entrance Hall, walk to table, lift the phone\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "154_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbutton, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: I would walk to my room where my phone is plugged in, pick up the phone, press the answer button, and lift the phone to my ear.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "180_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: ['SITTING'], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntrashcan, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwall_clock, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Find the phone\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "195_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Go to the phone and pick it up.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "211_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntrashcan, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwall_clock, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: I walk over to the phone and pick it up.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "241_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntrashcan, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwall_clock, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Find phone. Move to phone. Pick the phone up.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "264_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nshoe-shine_kit, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'EMPTY', 'GRABBED', 'OPEN']\nmouse, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Enter office. Go to desk. Pick up phone.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "265_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nbutton, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: I go to the living room and pick up the phone\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "287_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntrashcan, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwall_clock, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Locate the phone.  Extend arm toward the phone and open hand.  Place hand on phone and close fingers around phone.  Lift phone.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "352_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ntrashcan, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nmat, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'GRABBED', 'UNFOLDED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwall_clock, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: find the phone and pick it up\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "360_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: i go find the phone. i pick up the phone\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "388_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Find phone. Walk to phone. Pick up phone. Answer call with a greeting.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "431_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: I hear the phone ringing in the living room. I walk to the living room and go to the phone. I pick it up and answer the phone.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "436_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: walk to living room, walk to the phone reach for the phone and pick up the phone.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "442_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntrashcan, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwall_clock, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Find the phone and grab it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "474_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntrashcan, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwall_clock, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Find the phone and grab it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "482_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntrashcan, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwall_clock, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: I walk to the kitchen and find the phone. I pick up the phone. I hold it to my ear.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "497_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nhair, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Walk to home office 1. Walk over to phone 1 on table 1.  Grab phone 1.  lift phone 1.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "553_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Walk into the living room, walk over to phone, grab the phone, put it to your ear .\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "601_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntrashcan, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nbutton, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ntelevision, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nwall_clock, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Listen for ring,lift  phone, click accept button to pick up, Begin talking.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "70_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nfork, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nmouse, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: walk to living room. find desk. plug out phone. grab phone. touch phone.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "864_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhair, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: I'll enter the location containing the phone. Once there, I'll locate the phone, and move close to it. I'll then use my hand to pick up the phone such that I can then use it.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "963_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: walk to phone, grab phone, pick up phone, put to ear\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "974_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Walk to the entrance hall. Find the telephone. Grab the telephone.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "976_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncpuscreen, initial states: ['CLEAN'], possible states: ['CLEAN']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndesk, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nmouse, initial states: ['CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\nmousepad, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nkeyboard, initial states: ['CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'GRABBED', 'OCCUPIED', 'PLUGGED', 'UNPLUGGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: I hear the phone ringing in the office, I go in the office and pick up the phone on the desk.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "99_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nfloor, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nwall, initial states: ['DIRTY'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ndoor, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN', 'CLOSED', 'OPEN']\nceiling, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ntrashcan, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'EMPTY', 'FULL', 'OPEN']\ndoorjamb, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'OPEN']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\nmat, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'GRABBED', 'UNFOLDED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\ndrawing, initial states: ['CLEAN'], possible states: ['CLEAN', 'GRABBED', 'HANGED', 'UNHANGED']\nlight, initial states: ['ON', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'OFF', 'ON']\npowersocket, initial states: ['CLEAN'], possible states: ['CLEAN']\nphone, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'PLUGGED_OUT', 'BROKEN', 'GRABBED', 'OFF', 'ON', 'PLUGGED', 'UNPLUGGED']\nwall_clock, initial states: ['OFF', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'OFF', 'ON', 'PLUGGED_IN', 'BROKEN', 'GRABBED', 'HANGED', 'OFF', 'ON', 'UNHANGED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Pick up phone\n\nGoal description: Pick up phone\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "183_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncoffe_maker, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'OCCUPIED', 'OFF', 'ON', 'OPEN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ncoffee_filter, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nground_coffee, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'GRABBED', 'OPEN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Make coffee\n\nGoal description: Walk to Kitchen and find coffee maker, find coffee filter and place it in coffee maker. Find ground coffee and water. put both in coffee maker. Close the coffee maker and switch it on.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "229_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncoffe_maker, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'OCCUPIED', 'OFF', 'ON', 'OPEN']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ncoffee_filter, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nground_coffee, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'GRABBED', 'OPEN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Make coffee\n\nGoal description: Open coffee maker. Put filter in main basket, put ground coffee in filter, fill reservoir with water, turn on coffee maker.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "310_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncoffe_maker, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'OCCUPIED', 'OFF', 'ON', 'OPEN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ncoffee_filter, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nground_coffee, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'GRABBED', 'OPEN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Make coffee\n\nGoal description: I walk into the kitchen and find the coffee machine. I open and the coffee maker and add the coffee fitler. I grab the ground coffee and put it in the coffee maker. Then I add water to the coffee make,close it and turn it on.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "721_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncoffe_maker, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_OUT'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'OCCUPIED', 'OFF', 'ON', 'OPEN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ncoffee_filter, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nground_coffee, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'GRABBED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Make coffee\n\nGoal description: Find coffee maker, plug in coffee maker, open the coffee maker lid, pour water into coffee maker, put coffee filter, put Ground Coffee coffee maker, close the coffee maker, switch on the coffee maker\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "764_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncoffe_maker, initial states: ['OFF', 'CLOSED', 'CLEAN', 'PLUGGED_IN'], possible states: ['CLEAN', 'CLOSED', 'OFF', 'ON', 'OPEN', 'PLUGGED_IN', 'PLUGGED_OUT', 'FREE', 'OCCUPIED', 'OFF', 'ON', 'OPEN']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ncoffee_filter, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\nground_coffee, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLOSED', 'GRABBED', 'OPEN']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Make coffee\n\nGoal description: Open coffee maker. Put filter in main basket, put ground coffee in filter, fill reservoir with water, turn on coffee maker.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "419_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nchair, initial states: ['CLEAN'], possible states: ['CLEAN', 'FREE', 'GRABBED', 'OCCUPIED']\ncloth_napkin, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY', 'DRY', 'FREE', 'GRABBED', 'OCCUPIED', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nknife, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'FREE', 'GRABBED', 'OCCUPIED', 'SHARPENED', 'UNSHARPENED', 'WET']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\ncup, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\nmat, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'GRABBED', 'UNFOLDED']\nfork, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Set up table\n\nGoal description: Walk to dining room, walk to dining table, arrange chairs, set napkin, set plate, set knife, set fork and glass on table.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "446_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncupboard, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nmat, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FOLDED', 'GRABBED', 'UNFOLDED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Set up table\n\nGoal description: Go to kitchen, go to cupboard with dishes, grab dishes, walk to dining room, find table, put dishes on table.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "710_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nkitchen_cabinet, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'OPEN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Set up table\n\nGoal description: Walk to the kitchen. Open the kitchen cabinet. Grab the plate and put it on the table.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "84_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncouch, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ntable, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'FREE', 'OCCUPIED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Set up table\n\nGoal description: walk to entrance hall. find a table. pull table. walk to living rook. push table.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "93_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nhair, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COMBED', 'DIRTY', 'GRABBED', 'UNCOMBED']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Set up table\n\nGoal description: Find the table, pick up the table, take table to kitchen, place table face up.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "368_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncloth_napkin, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'DIRTY', 'DRY', 'FREE', 'GRABBED', 'OCCUPIED', 'WET']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Get some water\n\nGoal description: I pour water, take a cloth, go to the dining room, clean, take the cloth to the kitchen\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "729_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nshower, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'OFF', 'ON', 'CLEAN', 'COLD', 'DIRTY', 'FREE', 'HOT', 'OCCUPIED', 'OFF', 'ON']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Take shower\n\nGoal description: walk to bathroom , find shower , take a shower\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "975_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nshower, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'OFF', 'ON', 'CLEAN', 'COLD', 'DIRTY', 'FREE', 'HOT', 'OCCUPIED', 'OFF', 'ON']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Take shower\n\nGoal description: find the dresses, find the towel, walk to bathroom, find the shower, open the shower and take a shower\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "231_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: walk to kitchen, fins soap, arrange dishes, wash dishes\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "31_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbedroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nkitchen_counter, initial states: ['OPEN', 'CLEAN'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nbowl, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nsponge, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'GRABBED', 'WET']\ndishrack, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: I go to the kitchen and turn on the faucet. I get dish soap and put it into the sink. I grab a sponge and a bowl and start cleaning it. I put the bowl into the dishrack. I find a plate and clean it as well. I put it into the dishrack, turn off the faucet and put the sponge back.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "349_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: i go to the kitchen, i find the faucet. I turn the faucet on, i grab the plate to wash , i then get the soap. I wash the dishes by hand\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "397_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: Pick up dish.  Put in soapy water.  Wash dish.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "429_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: I walk into the kitchen and see dishes in the sink. I go to the sink, fill the sink with soap and water, and wash the dishes. Then I rinse the dishes with clean water and put them in the drying rack.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "553_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ncupboard, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nsoap, initial states: ['CLEAN'], possible states: ['CLEAN', 'DRY', 'GRABBED', 'WET']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfood_kiwi, initial states: ['CLEAN'], possible states: ['CLEAN', 'COLD', 'CUT', 'FULL', 'GRABBED', 'PEELED', 'ROTTEN']\nfood_food, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'COOKED', 'DIRTY', 'GRABBED', 'HOT', 'SLICED', 'UNCOOKED']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: Walk into Kitchen, walk to sink, grab a plate,put soap on sponge,wash plate with sponge, rinse with water, put away plate in cupboard.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "594_2",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nbathroom_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: Make some dish water, grab a dish rag, put dishes in dish water and wash.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "746_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\nwater, initial states: ['CLEAN'], possible states: ['CLEAN', 'BURNING', 'COLD', 'FROZEN', 'HOT']\nsponge, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'DRY', 'GRABBED', 'WET']\ndrinking_glass, initial states: ['CLEAN'], possible states: ['CLEAN', 'CLEAN', 'COLD', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED', 'HOT']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nhome_office, initial states: ['CLEAN'], possible states: ['CLEAN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: Wash the drinking glasses by hand\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "961_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbathroom, initial states: ['CLEAN'], possible states: ['CLEAN']\nkitchen_counter, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'FREE', 'OCCUPIED', 'OPEN']\nsink, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FREE', 'FULL', 'OCCUPIED']\nplate, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ndish_soap, initial states: ['CLEAN'], possible states: ['CLEAN', 'EMPTY', 'FULL', 'GRABBED']\ndishrack, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'DIRTY', 'EMPTY', 'FULL', 'GRABBED']\ndining_room, initial states: ['CLEAN'], possible states: ['CLEAN']\nfood_kiwi, initial states: ['CLEAN'], possible states: ['CLEAN', 'COLD', 'CUT', 'FULL', 'GRABBED', 'PEELED', 'ROTTEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: Walk to the kitchen and turn to the sink. Put the plate into the sink. Grab and squeeze the dish soap. Scrub the plate then rinse it. Put the plate into the dish rack.\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    },
    {
        "identifier": "988_1",
        "llm_prompt": "\nYour task is to understand natural language goals for a household robot, reason about the object states and relationships, and turn natural language goals into symbolic goals in the given format. The goals include: node goals describing object states, edge goals describing object relationships and action goals describing must-to-do actions in this goal. The input will be the goal's name, the goal's description, relevant objects as well as their current and all possible states, and all possible relationships between objects. The output should be the symbolic version of the goals.\n\n\nRelevant objects in the scene indicates those objects involved in the action execution initially. It will include the object name, the object initial states, and the object all possible states. It follows the format: object name, id: ...(object id), states: ...(object states), possible states: ...(all possible states). Your proposed object states should be within the following set: CLOSED, OPEN, ON, OFF, SITTING, DIRTY, CLEAN, LYING, PLUGGED_IN, PLUGGED_OUT.\n\n\nRelevant objects in the scene are:\nfaucet, initial states: ['OFF', 'CLEAN'], possible states: ['CLEAN', 'OFF', 'ON', 'OFF', 'ON']\ncharacter, initial states: [], possible states: ['LYING', 'SITTING']\nbowl, initial states: ['CLEAN'], possible states: ['CLEAN', 'DIRTY', 'CLEAN', 'COLD', 'DIRTY', 'DRY', 'GRABBED', 'HOT', 'WET']\ncupboard, initial states: ['CLEAN', 'CLOSED'], possible states: ['CLEAN', 'CLOSED', 'DIRTY', 'OPEN', 'CLEAN', 'CLOSED', 'DIRTY', 'EMPTY', 'FULL', 'OPEN']\n\n\nAll possible relationships are the keys of the following dictionary, and the corresponding values are their descriptions:\n{'ON': 'An object rests atop another, like a book on a table.', 'FACING': 'One object is oriented towards another, as in a person facing a wall.', 'HOLDS_LH': 'An object is held or supported by the left hand, like a left hand holding a ball.', 'INSIDE': 'An object is contained within another, like coins inside a jar.', 'BETWEEN': 'An object is situated spatially between two entities, like a park between two buildings.', 'HOLDS_RH': 'An object is grasped or carried by the right hand, such as a right hand holding a pen.', 'CLOSE': 'Objects are near each other without touching, like two close-standing trees.'}\n\n\nSymbolic goals format:\nNode goals should be a list indicating the desired ending states of objects. Each goal in the list should be a dictionary with two keys 'name' and 'state'. The value of 'name' is the name of the object, and the value of 'state' is the desired ending state of the target object. For example, [{'name': 'washing_machine', 'state': 'PLUGGED_IN'}, {'name': 'washing_machine', 'state': 'CLOSED'}, {'name': 'washing_machine', 'state': 'ON'}] requires the washing_machine to be PLUGGED_IN, CLOSED, and ON. It can be a valid interpretation of natural language goal: \nTask name: Wash clothes. \nTask description: Washing pants with washing machine\nThis is because if one wants to wash clothes, the washing machine should be functioning, and thus should be PLUGGED_IN, CLOSED, and ON.\n\nEdge goals is a list of dictionaries indicating the desired relationships between objects. Each goal in the list is a dictionary with three keys 'from_name', and 'relation' and 'to_name'. The value of 'relation' is desired relationship between 'from_name' object to 'to_name' object. The value of 'from_name' and 'to_name' should be an object name. The value of 'relation' should be an relationship. All relations should only be within the following set: ON, INSIDE, BETWEEN, CLOSE, FACING, HOLDS_RH, HOLDS_LH.\n\nEach relation has a fixed set of objects to be its 'to_name' target. Here is a dictionary where keys are 'relation' and corresponding values is its possible set of 'to_name' objects:\n{'ON': {'couch', 'oven', 'table', 'toilet', 'character', 'coffe_maker', 'dishwasher', 'washing_machine', 'bed'}, 'HOLDS_LH': {'water_glass', 'novel', 'spectacles', 'toothbrush', 'keyboard', 'tooth_paste'}, 'HOLDS_RH': {'cup', 'water_glass', 'address_book', 'novel', 'phone', 'drinking_glass', 'toothbrush', 'remote_control', 'mouse', 'tooth_paste'}, 'INSIDE': {'freezer', 'bathroom', 'dining_room', 'home_office', 'hands_both'}, 'FACING': {'computer', 'toilet', 'phone', 'laptop', 'television', 'remote_control'}, 'CLOSE': {'cat', 'shower'}}\n\nAction goals is a list of actions that must be completed in the goals. The number of actions is less than three. If node goals and edge goals are not enough to fully describe the goal, add action goals to describe the goal. Below is a dictionary of possible actions, whose keys are all possible actions and values are corresponding descriptions. When output actions goal list, each action goal should be a dictionary with keys 'action' and 'description'.\n{'CLOSE': 'as opposed to open sth, CLOSE sth means changing the state from OPEN to CLOSE, not get close to!', 'DRINK': 'drink up sth', 'FIND': 'find and get near to sth', 'WALK': 'walk towards sth, get near to sth', 'GRAB': 'graph sth', 'LOOKAT': 'look at sth, face sth', 'LOOKAT_SHORT': 'shortly look at sth', 'LOOKAT_LONG': 'look at sth for long', 'OPEN': 'open sth, as opposed to close sth', 'POINTAT': 'point at sth', 'PUTBACK': 'put object A back to object B', 'PUTIN': 'put object A into object B', 'PUTOBJBACK': 'put object back to its original place', 'RUN': 'run towards sth, get close to sth', 'SIT': 'sit on sth', 'STANDUP': 'stand up', 'SWITCHOFF': 'switch sth off (normally lamp/light)', 'SWITCHON': 'switch sth on (normally lamp/light)', 'TOUCH': 'touch sth', 'TURNTO': 'turn and face sth', 'WATCH': 'watch sth', 'WIPE': 'wipe sth out', 'PUTON': 'put on clothes, need to hold the clothes first', 'PUTOFF': 'put off clothes', 'GREET': 'greet to somebody', 'DROP': \"drop something in robot's current room, need to hold the thing first\", 'READ': 'read something, need to hold the thing first', 'LIE': 'lie on something, need to get close the thing first', 'POUR': 'pour object A into object B', 'TYPE': 'type on keyboard', 'PUSH': 'move sth', 'PULL': 'move sth', 'MOVE': 'move sth', 'WASH': 'wash sth', 'RINSE': 'rinse sth', 'SCRUB': 'scrub sth', 'SQUEEZE': 'squeeze the clothes', 'PLUGIN': 'plug in the plug', 'PLUGOUT': 'plug out the plug', 'CUT': 'cut some food', 'EAT': 'eat some food', 'RELEASE': 'drop sth inside the current room'}\n\nGoal name and goal description:\nGoal name: Wash dishes by hand\n\nGoal description: wash dish in sink, dry, put in cupboard\n\n\n\nNow output the symbolic version of the goal. Output in json format, whose keys are 'node goals', 'edge goals', and 'action goals', and values are your output of symbolic node goals, symbolic edge goals, and symbolic action goals, respectively. That is, {'node goals': SYMBOLIC NODE GOALS, 'edge goals': SYMBOLIC EDGE GOALS, 'action goals': SYMBOLIC ACTION GOALS}. Please strictly follow the symbolic goal format.\n"
    }
]